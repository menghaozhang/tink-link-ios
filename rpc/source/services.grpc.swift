//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: services.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Dispatch
import Foundation
import SwiftGRPC
import SwiftProtobuf

public protocol AbnAmroAuthenticationServiceAuthenticateCall: ClientCallUnary {}

fileprivate final class AbnAmroAuthenticationServiceAuthenticateCallBase: ClientCallUnaryBase<AbnAmroAuthenticationRequest, AbnAmroAuthenticationResponse>, AbnAmroAuthenticationServiceAuthenticateCall {
  override class var method: String { return "/AbnAmroAuthenticationService/Authenticate" }
}

public protocol AbnAmroAuthenticationServiceAuthenticatePhoneNumberCall: ClientCallUnary {}

fileprivate final class AbnAmroAuthenticationServiceAuthenticatePhoneNumberCallBase: ClientCallUnaryBase<AbnAmroAuthenticatePhoneNumberRequest, AbnAmroAuthenticatePhoneNumberResponse>, AbnAmroAuthenticationServiceAuthenticatePhoneNumberCall {
  override class var method: String { return "/AbnAmroAuthenticationService/AuthenticatePhoneNumber" }
}


/// Instantiate AbnAmroAuthenticationServiceServiceClient, then call methods of this protocol to make API calls.
public protocol AbnAmroAuthenticationServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func authenticate(_ request: AbnAmroAuthenticationRequest, metadata customMetadata: Metadata, completion: @escaping (AbnAmroAuthenticationResponse?, CallResult) -> Void) throws -> AbnAmroAuthenticationServiceAuthenticateCall

  /// Asynchronous. Unary.
  @discardableResult
  func authenticatePhoneNumber(_ request: AbnAmroAuthenticatePhoneNumberRequest, metadata customMetadata: Metadata, completion: @escaping (AbnAmroAuthenticatePhoneNumberResponse?, CallResult) -> Void) throws -> AbnAmroAuthenticationServiceAuthenticatePhoneNumberCall

}

public extension AbnAmroAuthenticationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func authenticate(_ request: AbnAmroAuthenticationRequest, completion: @escaping (AbnAmroAuthenticationResponse?, CallResult) -> Void) throws -> AbnAmroAuthenticationServiceAuthenticateCall {
    return try self.authenticate(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func authenticatePhoneNumber(_ request: AbnAmroAuthenticatePhoneNumberRequest, completion: @escaping (AbnAmroAuthenticatePhoneNumberResponse?, CallResult) -> Void) throws -> AbnAmroAuthenticationServiceAuthenticatePhoneNumberCall {
    return try self.authenticatePhoneNumber(request, metadata: self.metadata, completion: completion)
  }

}

public final class AbnAmroAuthenticationServiceServiceClient: ServiceClientBase, AbnAmroAuthenticationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func authenticate(_ request: AbnAmroAuthenticationRequest, metadata customMetadata: Metadata, completion: @escaping (AbnAmroAuthenticationResponse?, CallResult) -> Void) throws -> AbnAmroAuthenticationServiceAuthenticateCall {
    return try AbnAmroAuthenticationServiceAuthenticateCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func authenticatePhoneNumber(_ request: AbnAmroAuthenticatePhoneNumberRequest, metadata customMetadata: Metadata, completion: @escaping (AbnAmroAuthenticatePhoneNumberResponse?, CallResult) -> Void) throws -> AbnAmroAuthenticationServiceAuthenticatePhoneNumberCall {
    return try AbnAmroAuthenticationServiceAuthenticatePhoneNumberCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol AbnAmroResetPin6ByThirdPartyAppServiceInitializePin6ResetByThirdPartyAppCall: ClientCallUnary {}

fileprivate final class AbnAmroResetPin6ByThirdPartyAppServiceInitializePin6ResetByThirdPartyAppCallBase: ClientCallUnaryBase<InitializePin6ResetByThirdPartyAppRequest, InitializePin6ResetByThirdPartyAppResponse>, AbnAmroResetPin6ByThirdPartyAppServiceInitializePin6ResetByThirdPartyAppCall {
  override class var method: String { return "/AbnAmroResetPin6ByThirdPartyAppService/InitializePin6ResetByThirdPartyApp" }
}


/// Instantiate AbnAmroResetPin6ByThirdPartyAppServiceServiceClient, then call methods of this protocol to make API calls.
public protocol AbnAmroResetPin6ByThirdPartyAppServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func initializePin6ResetByThirdPartyApp(_ request: InitializePin6ResetByThirdPartyAppRequest, metadata customMetadata: Metadata, completion: @escaping (InitializePin6ResetByThirdPartyAppResponse?, CallResult) -> Void) throws -> AbnAmroResetPin6ByThirdPartyAppServiceInitializePin6ResetByThirdPartyAppCall

}

public extension AbnAmroResetPin6ByThirdPartyAppServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func initializePin6ResetByThirdPartyApp(_ request: InitializePin6ResetByThirdPartyAppRequest, completion: @escaping (InitializePin6ResetByThirdPartyAppResponse?, CallResult) -> Void) throws -> AbnAmroResetPin6ByThirdPartyAppServiceInitializePin6ResetByThirdPartyAppCall {
    return try self.initializePin6ResetByThirdPartyApp(request, metadata: self.metadata, completion: completion)
  }

}

public final class AbnAmroResetPin6ByThirdPartyAppServiceServiceClient: ServiceClientBase, AbnAmroResetPin6ByThirdPartyAppServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func initializePin6ResetByThirdPartyApp(_ request: InitializePin6ResetByThirdPartyAppRequest, metadata customMetadata: Metadata, completion: @escaping (InitializePin6ResetByThirdPartyAppResponse?, CallResult) -> Void) throws -> AbnAmroResetPin6ByThirdPartyAppServiceInitializePin6ResetByThirdPartyAppCall {
    return try AbnAmroResetPin6ByThirdPartyAppServiceInitializePin6ResetByThirdPartyAppCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol AbnAmroMigrationServiceMigrateCall: ClientCallUnary {}

fileprivate final class AbnAmroMigrationServiceMigrateCallBase: ClientCallUnaryBase<AbnAmroMigrationRequest, AbnAmroMigrationResponse>, AbnAmroMigrationServiceMigrateCall {
  override class var method: String { return "/AbnAmroMigrationService/Migrate" }
}


/// Instantiate AbnAmroMigrationServiceServiceClient, then call methods of this protocol to make API calls.
public protocol AbnAmroMigrationServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func migrate(_ request: AbnAmroMigrationRequest, metadata customMetadata: Metadata, completion: @escaping (AbnAmroMigrationResponse?, CallResult) -> Void) throws -> AbnAmroMigrationServiceMigrateCall

}

public extension AbnAmroMigrationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func migrate(_ request: AbnAmroMigrationRequest, completion: @escaping (AbnAmroMigrationResponse?, CallResult) -> Void) throws -> AbnAmroMigrationServiceMigrateCall {
    return try self.migrate(request, metadata: self.metadata, completion: completion)
  }

}

public final class AbnAmroMigrationServiceServiceClient: ServiceClientBase, AbnAmroMigrationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func migrate(_ request: AbnAmroMigrationRequest, metadata customMetadata: Metadata, completion: @escaping (AbnAmroMigrationResponse?, CallResult) -> Void) throws -> AbnAmroMigrationServiceMigrateCall {
    return try AbnAmroMigrationServiceMigrateCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol AccountServiceListAccountsCall: ClientCallUnary {}

fileprivate final class AccountServiceListAccountsCallBase: ClientCallUnaryBase<ListAccountsRequest, ListAccountsResponse>, AccountServiceListAccountsCall {
  override class var method: String { return "/AccountService/ListAccounts" }
}

public protocol AccountServiceUpdateAccountCall: ClientCallUnary {}

fileprivate final class AccountServiceUpdateAccountCallBase: ClientCallUnaryBase<UpdateAccountRequest, UpdateAccountResponse>, AccountServiceUpdateAccountCall {
  override class var method: String { return "/AccountService/UpdateAccount" }
}


/// Instantiate AccountServiceServiceClient, then call methods of this protocol to make API calls.
public protocol AccountServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func listAccounts(_ request: ListAccountsRequest, metadata customMetadata: Metadata, completion: @escaping (ListAccountsResponse?, CallResult) -> Void) throws -> AccountServiceListAccountsCall

  /// Asynchronous. Unary.
  @discardableResult
  func updateAccount(_ request: UpdateAccountRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateAccountResponse?, CallResult) -> Void) throws -> AccountServiceUpdateAccountCall

}

public extension AccountServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func listAccounts(_ request: ListAccountsRequest, completion: @escaping (ListAccountsResponse?, CallResult) -> Void) throws -> AccountServiceListAccountsCall {
    return try self.listAccounts(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func updateAccount(_ request: UpdateAccountRequest, completion: @escaping (UpdateAccountResponse?, CallResult) -> Void) throws -> AccountServiceUpdateAccountCall {
    return try self.updateAccount(request, metadata: self.metadata, completion: completion)
  }

}

public final class AccountServiceServiceClient: ServiceClientBase, AccountServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func listAccounts(_ request: ListAccountsRequest, metadata customMetadata: Metadata, completion: @escaping (ListAccountsResponse?, CallResult) -> Void) throws -> AccountServiceListAccountsCall {
    return try AccountServiceListAccountsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func updateAccount(_ request: UpdateAccountRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateAccountResponse?, CallResult) -> Void) throws -> AccountServiceUpdateAccountCall {
    return try AccountServiceUpdateAccountCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol ActivityServiceListHtmlCall: ClientCallUnary {}

fileprivate final class ActivityServiceListHtmlCallBase: ClientCallUnaryBase<ListActivityHtmlRequest, ListActivityHtmlResponse>, ActivityServiceListHtmlCall {
  override class var method: String { return "/ActivityService/ListHtml" }
}

public protocol ActivityServiceHtmlHeadCall: ClientCallUnary {}

fileprivate final class ActivityServiceHtmlHeadCallBase: ClientCallUnaryBase<ActivityHtmlHeadRequest, ActivityHtmlHeadResponse>, ActivityServiceHtmlHeadCall {
  override class var method: String { return "/ActivityService/HtmlHead" }
}


/// Instantiate ActivityServiceServiceClient, then call methods of this protocol to make API calls.
public protocol ActivityServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func listHtml(_ request: ListActivityHtmlRequest, metadata customMetadata: Metadata, completion: @escaping (ListActivityHtmlResponse?, CallResult) -> Void) throws -> ActivityServiceListHtmlCall

  /// Asynchronous. Unary.
  @discardableResult
  func htmlHead(_ request: ActivityHtmlHeadRequest, metadata customMetadata: Metadata, completion: @escaping (ActivityHtmlHeadResponse?, CallResult) -> Void) throws -> ActivityServiceHtmlHeadCall

}

public extension ActivityServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func listHtml(_ request: ListActivityHtmlRequest, completion: @escaping (ListActivityHtmlResponse?, CallResult) -> Void) throws -> ActivityServiceListHtmlCall {
    return try self.listHtml(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func htmlHead(_ request: ActivityHtmlHeadRequest, completion: @escaping (ActivityHtmlHeadResponse?, CallResult) -> Void) throws -> ActivityServiceHtmlHeadCall {
    return try self.htmlHead(request, metadata: self.metadata, completion: completion)
  }

}

public final class ActivityServiceServiceClient: ServiceClientBase, ActivityServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func listHtml(_ request: ListActivityHtmlRequest, metadata customMetadata: Metadata, completion: @escaping (ListActivityHtmlResponse?, CallResult) -> Void) throws -> ActivityServiceListHtmlCall {
    return try ActivityServiceListHtmlCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func htmlHead(_ request: ActivityHtmlHeadRequest, metadata customMetadata: Metadata, completion: @escaping (ActivityHtmlHeadResponse?, CallResult) -> Void) throws -> ActivityServiceHtmlHeadCall {
    return try ActivityServiceHtmlHeadCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol ApplicationServiceCreateApplicationCall: ClientCallUnary {}

fileprivate final class ApplicationServiceCreateApplicationCallBase: ClientCallUnaryBase<CreateApplicationRequest, CreateApplicationResponse>, ApplicationServiceCreateApplicationCall {
  override class var method: String { return "/ApplicationService/CreateApplication" }
}

public protocol ApplicationServiceGetApplicationCall: ClientCallUnary {}

fileprivate final class ApplicationServiceGetApplicationCallBase: ClientCallUnaryBase<GetApplicationRequest, GetApplicationResponse>, ApplicationServiceGetApplicationCall {
  override class var method: String { return "/ApplicationService/GetApplication" }
}

public protocol ApplicationServiceDeleteApplicationCall: ClientCallUnary {}

fileprivate final class ApplicationServiceDeleteApplicationCallBase: ClientCallUnaryBase<DeleteApplicationRequest, DeleteApplicationResponse>, ApplicationServiceDeleteApplicationCall {
  override class var method: String { return "/ApplicationService/DeleteApplication" }
}

public protocol ApplicationServiceGetApplicationSummaryCall: ClientCallUnary {}

fileprivate final class ApplicationServiceGetApplicationSummaryCallBase: ClientCallUnaryBase<GetApplicationSummaryRequest, GetApplicationSummaryResponse>, ApplicationServiceGetApplicationSummaryCall {
  override class var method: String { return "/ApplicationService/GetApplicationSummary" }
}

public protocol ApplicationServiceGetApplicationSummaryListCall: ClientCallUnary {}

fileprivate final class ApplicationServiceGetApplicationSummaryListCallBase: ClientCallUnaryBase<GetApplicationSummaryListRequest, GetApplicationSummaryListResponse>, ApplicationServiceGetApplicationSummaryListCall {
  override class var method: String { return "/ApplicationService/GetApplicationSummaryList" }
}

public protocol ApplicationServiceSubmitApplicationFormCall: ClientCallUnary {}

fileprivate final class ApplicationServiceSubmitApplicationFormCallBase: ClientCallUnaryBase<SubmitApplicationFormRequest, SubmitApplicationFormResponse>, ApplicationServiceSubmitApplicationFormCall {
  override class var method: String { return "/ApplicationService/SubmitApplicationForm" }
}

public protocol ApplicationServiceSubmitApplicationCall: ClientCallUnary {}

fileprivate final class ApplicationServiceSubmitApplicationCallBase: ClientCallUnaryBase<SubmitApplicationRequest, SubmitApplicationResponse>, ApplicationServiceSubmitApplicationCall {
  override class var method: String { return "/ApplicationService/SubmitApplication" }
}

public protocol ApplicationServiceGetEligibleApplicationTypesCall: ClientCallUnary {}

fileprivate final class ApplicationServiceGetEligibleApplicationTypesCallBase: ClientCallUnaryBase<GetEligibleApplicationTypesRequest, GetEligibleApplicationTypesResponse>, ApplicationServiceGetEligibleApplicationTypesCall {
  override class var method: String { return "/ApplicationService/GetEligibleApplicationTypes" }
}


/// Instantiate ApplicationServiceServiceClient, then call methods of this protocol to make API calls.
public protocol ApplicationServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func createApplication(_ request: CreateApplicationRequest, metadata customMetadata: Metadata, completion: @escaping (CreateApplicationResponse?, CallResult) -> Void) throws -> ApplicationServiceCreateApplicationCall

  /// Asynchronous. Unary.
  @discardableResult
  func getApplication(_ request: GetApplicationRequest, metadata customMetadata: Metadata, completion: @escaping (GetApplicationResponse?, CallResult) -> Void) throws -> ApplicationServiceGetApplicationCall

  /// Asynchronous. Unary.
  @discardableResult
  func deleteApplication(_ request: DeleteApplicationRequest, metadata customMetadata: Metadata, completion: @escaping (DeleteApplicationResponse?, CallResult) -> Void) throws -> ApplicationServiceDeleteApplicationCall

  /// Asynchronous. Unary.
  @discardableResult
  func getApplicationSummary(_ request: GetApplicationSummaryRequest, metadata customMetadata: Metadata, completion: @escaping (GetApplicationSummaryResponse?, CallResult) -> Void) throws -> ApplicationServiceGetApplicationSummaryCall

  /// Asynchronous. Unary.
  @discardableResult
  func getApplicationSummaryList(_ request: GetApplicationSummaryListRequest, metadata customMetadata: Metadata, completion: @escaping (GetApplicationSummaryListResponse?, CallResult) -> Void) throws -> ApplicationServiceGetApplicationSummaryListCall

  /// Asynchronous. Unary.
  @discardableResult
  func submitApplicationForm(_ request: SubmitApplicationFormRequest, metadata customMetadata: Metadata, completion: @escaping (SubmitApplicationFormResponse?, CallResult) -> Void) throws -> ApplicationServiceSubmitApplicationFormCall

  /// Asynchronous. Unary.
  @discardableResult
  func submitApplication(_ request: SubmitApplicationRequest, metadata customMetadata: Metadata, completion: @escaping (SubmitApplicationResponse?, CallResult) -> Void) throws -> ApplicationServiceSubmitApplicationCall

  /// Asynchronous. Unary.
  @discardableResult
  func getEligibleApplicationTypes(_ request: GetEligibleApplicationTypesRequest, metadata customMetadata: Metadata, completion: @escaping (GetEligibleApplicationTypesResponse?, CallResult) -> Void) throws -> ApplicationServiceGetEligibleApplicationTypesCall

}

public extension ApplicationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func createApplication(_ request: CreateApplicationRequest, completion: @escaping (CreateApplicationResponse?, CallResult) -> Void) throws -> ApplicationServiceCreateApplicationCall {
    return try self.createApplication(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getApplication(_ request: GetApplicationRequest, completion: @escaping (GetApplicationResponse?, CallResult) -> Void) throws -> ApplicationServiceGetApplicationCall {
    return try self.getApplication(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func deleteApplication(_ request: DeleteApplicationRequest, completion: @escaping (DeleteApplicationResponse?, CallResult) -> Void) throws -> ApplicationServiceDeleteApplicationCall {
    return try self.deleteApplication(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getApplicationSummary(_ request: GetApplicationSummaryRequest, completion: @escaping (GetApplicationSummaryResponse?, CallResult) -> Void) throws -> ApplicationServiceGetApplicationSummaryCall {
    return try self.getApplicationSummary(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getApplicationSummaryList(_ request: GetApplicationSummaryListRequest, completion: @escaping (GetApplicationSummaryListResponse?, CallResult) -> Void) throws -> ApplicationServiceGetApplicationSummaryListCall {
    return try self.getApplicationSummaryList(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func submitApplicationForm(_ request: SubmitApplicationFormRequest, completion: @escaping (SubmitApplicationFormResponse?, CallResult) -> Void) throws -> ApplicationServiceSubmitApplicationFormCall {
    return try self.submitApplicationForm(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func submitApplication(_ request: SubmitApplicationRequest, completion: @escaping (SubmitApplicationResponse?, CallResult) -> Void) throws -> ApplicationServiceSubmitApplicationCall {
    return try self.submitApplication(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getEligibleApplicationTypes(_ request: GetEligibleApplicationTypesRequest, completion: @escaping (GetEligibleApplicationTypesResponse?, CallResult) -> Void) throws -> ApplicationServiceGetEligibleApplicationTypesCall {
    return try self.getEligibleApplicationTypes(request, metadata: self.metadata, completion: completion)
  }

}

public final class ApplicationServiceServiceClient: ServiceClientBase, ApplicationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func createApplication(_ request: CreateApplicationRequest, metadata customMetadata: Metadata, completion: @escaping (CreateApplicationResponse?, CallResult) -> Void) throws -> ApplicationServiceCreateApplicationCall {
    return try ApplicationServiceCreateApplicationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getApplication(_ request: GetApplicationRequest, metadata customMetadata: Metadata, completion: @escaping (GetApplicationResponse?, CallResult) -> Void) throws -> ApplicationServiceGetApplicationCall {
    return try ApplicationServiceGetApplicationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func deleteApplication(_ request: DeleteApplicationRequest, metadata customMetadata: Metadata, completion: @escaping (DeleteApplicationResponse?, CallResult) -> Void) throws -> ApplicationServiceDeleteApplicationCall {
    return try ApplicationServiceDeleteApplicationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getApplicationSummary(_ request: GetApplicationSummaryRequest, metadata customMetadata: Metadata, completion: @escaping (GetApplicationSummaryResponse?, CallResult) -> Void) throws -> ApplicationServiceGetApplicationSummaryCall {
    return try ApplicationServiceGetApplicationSummaryCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getApplicationSummaryList(_ request: GetApplicationSummaryListRequest, metadata customMetadata: Metadata, completion: @escaping (GetApplicationSummaryListResponse?, CallResult) -> Void) throws -> ApplicationServiceGetApplicationSummaryListCall {
    return try ApplicationServiceGetApplicationSummaryListCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func submitApplicationForm(_ request: SubmitApplicationFormRequest, metadata customMetadata: Metadata, completion: @escaping (SubmitApplicationFormResponse?, CallResult) -> Void) throws -> ApplicationServiceSubmitApplicationFormCall {
    return try ApplicationServiceSubmitApplicationFormCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func submitApplication(_ request: SubmitApplicationRequest, metadata customMetadata: Metadata, completion: @escaping (SubmitApplicationResponse?, CallResult) -> Void) throws -> ApplicationServiceSubmitApplicationCall {
    return try ApplicationServiceSubmitApplicationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getEligibleApplicationTypes(_ request: GetEligibleApplicationTypesRequest, metadata customMetadata: Metadata, completion: @escaping (GetEligibleApplicationTypesResponse?, CallResult) -> Void) throws -> ApplicationServiceGetEligibleApplicationTypesCall {
    return try ApplicationServiceGetEligibleApplicationTypesCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol AuthenticationServiceLoginCall: ClientCallUnary {}

fileprivate final class AuthenticationServiceLoginCallBase: ClientCallUnaryBase<LoginRequest, LoginResponse>, AuthenticationServiceLoginCall {
  override class var method: String { return "/AuthenticationService/Login" }
}

public protocol AuthenticationServiceRegisterCall: ClientCallUnary {}

fileprivate final class AuthenticationServiceRegisterCallBase: ClientCallUnaryBase<RegisterRequest, RegisterResponse>, AuthenticationServiceRegisterCall {
  override class var method: String { return "/AuthenticationService/Register" }
}

public protocol AuthenticationServiceLogoutCall: ClientCallUnary {}

fileprivate final class AuthenticationServiceLogoutCallBase: ClientCallUnaryBase<LogoutRequest, LogoutResponse>, AuthenticationServiceLogoutCall {
  override class var method: String { return "/AuthenticationService/Logout" }
}


/// Instantiate AuthenticationServiceServiceClient, then call methods of this protocol to make API calls.
public protocol AuthenticationServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func login(_ request: LoginRequest, metadata customMetadata: Metadata, completion: @escaping (LoginResponse?, CallResult) -> Void) throws -> AuthenticationServiceLoginCall

  /// Asynchronous. Unary.
  @discardableResult
  func register(_ request: RegisterRequest, metadata customMetadata: Metadata, completion: @escaping (RegisterResponse?, CallResult) -> Void) throws -> AuthenticationServiceRegisterCall

  /// Asynchronous. Unary.
  @discardableResult
  func logout(_ request: LogoutRequest, metadata customMetadata: Metadata, completion: @escaping (LogoutResponse?, CallResult) -> Void) throws -> AuthenticationServiceLogoutCall

}

public extension AuthenticationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func login(_ request: LoginRequest, completion: @escaping (LoginResponse?, CallResult) -> Void) throws -> AuthenticationServiceLoginCall {
    return try self.login(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func register(_ request: RegisterRequest, completion: @escaping (RegisterResponse?, CallResult) -> Void) throws -> AuthenticationServiceRegisterCall {
    return try self.register(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func logout(_ request: LogoutRequest, completion: @escaping (LogoutResponse?, CallResult) -> Void) throws -> AuthenticationServiceLogoutCall {
    return try self.logout(request, metadata: self.metadata, completion: completion)
  }

}

public final class AuthenticationServiceServiceClient: ServiceClientBase, AuthenticationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func login(_ request: LoginRequest, metadata customMetadata: Metadata, completion: @escaping (LoginResponse?, CallResult) -> Void) throws -> AuthenticationServiceLoginCall {
    return try AuthenticationServiceLoginCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func register(_ request: RegisterRequest, metadata customMetadata: Metadata, completion: @escaping (RegisterResponse?, CallResult) -> Void) throws -> AuthenticationServiceRegisterCall {
    return try AuthenticationServiceRegisterCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func logout(_ request: LogoutRequest, metadata customMetadata: Metadata, completion: @escaping (LogoutResponse?, CallResult) -> Void) throws -> AuthenticationServiceLogoutCall {
    return try AuthenticationServiceLogoutCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol BudgetServiceCreateBudgetCall: ClientCallUnary {}

fileprivate final class BudgetServiceCreateBudgetCallBase: ClientCallUnaryBase<CreateBudgetRequest, CreateBudgetResponse>, BudgetServiceCreateBudgetCall {
  override class var method: String { return "/BudgetService/CreateBudget" }
}

public protocol BudgetServiceUpdateBudgetCall: ClientCallUnary {}

fileprivate final class BudgetServiceUpdateBudgetCallBase: ClientCallUnaryBase<UpdateBudgetRequest, UpdateBudgetResponse>, BudgetServiceUpdateBudgetCall {
  override class var method: String { return "/BudgetService/UpdateBudget" }
}

public protocol BudgetServiceDeleteBudgetCall: ClientCallUnary {}

fileprivate final class BudgetServiceDeleteBudgetCallBase: ClientCallUnaryBase<DeleteBudgetRequest, DeleteBudgetResponse>, BudgetServiceDeleteBudgetCall {
  override class var method: String { return "/BudgetService/DeleteBudget" }
}

public protocol BudgetServiceArchiveBudgetCall: ClientCallUnary {}

fileprivate final class BudgetServiceArchiveBudgetCallBase: ClientCallUnaryBase<ArchiveBudgetRequest, ArchiveBudgetResponse>, BudgetServiceArchiveBudgetCall {
  override class var method: String { return "/BudgetService/ArchiveBudget" }
}

public protocol BudgetServiceListBudgetsCall: ClientCallUnary {}

fileprivate final class BudgetServiceListBudgetsCallBase: ClientCallUnaryBase<ListBudgetsRequest, ListBudgetsResponse>, BudgetServiceListBudgetsCall {
  override class var method: String { return "/BudgetService/ListBudgets" }
}

public protocol BudgetServiceGetBudgetPeriodDetailsCall: ClientCallUnary {}

fileprivate final class BudgetServiceGetBudgetPeriodDetailsCallBase: ClientCallUnaryBase<GetBudgetPeriodDetailsRequest, GetBudgetPeriodDetailsResponse>, BudgetServiceGetBudgetPeriodDetailsCall {
  override class var method: String { return "/BudgetService/GetBudgetPeriodDetails" }
}

public protocol BudgetServiceGetBudgetTransactionsCall: ClientCallUnary {}

fileprivate final class BudgetServiceGetBudgetTransactionsCallBase: ClientCallUnaryBase<GetBudgetTransactionsRequest, GetBudgetTransactionsResponse>, BudgetServiceGetBudgetTransactionsCall {
  override class var method: String { return "/BudgetService/GetBudgetTransactions" }
}


/// Instantiate BudgetServiceServiceClient, then call methods of this protocol to make API calls.
public protocol BudgetServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func createBudget(_ request: CreateBudgetRequest, metadata customMetadata: Metadata, completion: @escaping (CreateBudgetResponse?, CallResult) -> Void) throws -> BudgetServiceCreateBudgetCall

  /// Asynchronous. Unary.
  @discardableResult
  func updateBudget(_ request: UpdateBudgetRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateBudgetResponse?, CallResult) -> Void) throws -> BudgetServiceUpdateBudgetCall

  /// Asynchronous. Unary.
  @discardableResult
  func deleteBudget(_ request: DeleteBudgetRequest, metadata customMetadata: Metadata, completion: @escaping (DeleteBudgetResponse?, CallResult) -> Void) throws -> BudgetServiceDeleteBudgetCall

  /// Asynchronous. Unary.
  @discardableResult
  func archiveBudget(_ request: ArchiveBudgetRequest, metadata customMetadata: Metadata, completion: @escaping (ArchiveBudgetResponse?, CallResult) -> Void) throws -> BudgetServiceArchiveBudgetCall

  /// Asynchronous. Unary.
  @discardableResult
  func listBudgets(_ request: ListBudgetsRequest, metadata customMetadata: Metadata, completion: @escaping (ListBudgetsResponse?, CallResult) -> Void) throws -> BudgetServiceListBudgetsCall

  /// Asynchronous. Unary.
  @discardableResult
  func getBudgetPeriodDetails(_ request: GetBudgetPeriodDetailsRequest, metadata customMetadata: Metadata, completion: @escaping (GetBudgetPeriodDetailsResponse?, CallResult) -> Void) throws -> BudgetServiceGetBudgetPeriodDetailsCall

  /// Asynchronous. Unary.
  @discardableResult
  func getBudgetTransactions(_ request: GetBudgetTransactionsRequest, metadata customMetadata: Metadata, completion: @escaping (GetBudgetTransactionsResponse?, CallResult) -> Void) throws -> BudgetServiceGetBudgetTransactionsCall

}

public extension BudgetServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func createBudget(_ request: CreateBudgetRequest, completion: @escaping (CreateBudgetResponse?, CallResult) -> Void) throws -> BudgetServiceCreateBudgetCall {
    return try self.createBudget(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func updateBudget(_ request: UpdateBudgetRequest, completion: @escaping (UpdateBudgetResponse?, CallResult) -> Void) throws -> BudgetServiceUpdateBudgetCall {
    return try self.updateBudget(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func deleteBudget(_ request: DeleteBudgetRequest, completion: @escaping (DeleteBudgetResponse?, CallResult) -> Void) throws -> BudgetServiceDeleteBudgetCall {
    return try self.deleteBudget(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func archiveBudget(_ request: ArchiveBudgetRequest, completion: @escaping (ArchiveBudgetResponse?, CallResult) -> Void) throws -> BudgetServiceArchiveBudgetCall {
    return try self.archiveBudget(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func listBudgets(_ request: ListBudgetsRequest, completion: @escaping (ListBudgetsResponse?, CallResult) -> Void) throws -> BudgetServiceListBudgetsCall {
    return try self.listBudgets(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getBudgetPeriodDetails(_ request: GetBudgetPeriodDetailsRequest, completion: @escaping (GetBudgetPeriodDetailsResponse?, CallResult) -> Void) throws -> BudgetServiceGetBudgetPeriodDetailsCall {
    return try self.getBudgetPeriodDetails(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getBudgetTransactions(_ request: GetBudgetTransactionsRequest, completion: @escaping (GetBudgetTransactionsResponse?, CallResult) -> Void) throws -> BudgetServiceGetBudgetTransactionsCall {
    return try self.getBudgetTransactions(request, metadata: self.metadata, completion: completion)
  }

}

public final class BudgetServiceServiceClient: ServiceClientBase, BudgetServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func createBudget(_ request: CreateBudgetRequest, metadata customMetadata: Metadata, completion: @escaping (CreateBudgetResponse?, CallResult) -> Void) throws -> BudgetServiceCreateBudgetCall {
    return try BudgetServiceCreateBudgetCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func updateBudget(_ request: UpdateBudgetRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateBudgetResponse?, CallResult) -> Void) throws -> BudgetServiceUpdateBudgetCall {
    return try BudgetServiceUpdateBudgetCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func deleteBudget(_ request: DeleteBudgetRequest, metadata customMetadata: Metadata, completion: @escaping (DeleteBudgetResponse?, CallResult) -> Void) throws -> BudgetServiceDeleteBudgetCall {
    return try BudgetServiceDeleteBudgetCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func archiveBudget(_ request: ArchiveBudgetRequest, metadata customMetadata: Metadata, completion: @escaping (ArchiveBudgetResponse?, CallResult) -> Void) throws -> BudgetServiceArchiveBudgetCall {
    return try BudgetServiceArchiveBudgetCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func listBudgets(_ request: ListBudgetsRequest, metadata customMetadata: Metadata, completion: @escaping (ListBudgetsResponse?, CallResult) -> Void) throws -> BudgetServiceListBudgetsCall {
    return try BudgetServiceListBudgetsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getBudgetPeriodDetails(_ request: GetBudgetPeriodDetailsRequest, metadata customMetadata: Metadata, completion: @escaping (GetBudgetPeriodDetailsResponse?, CallResult) -> Void) throws -> BudgetServiceGetBudgetPeriodDetailsCall {
    return try BudgetServiceGetBudgetPeriodDetailsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getBudgetTransactions(_ request: GetBudgetTransactionsRequest, metadata customMetadata: Metadata, completion: @escaping (GetBudgetTransactionsResponse?, CallResult) -> Void) throws -> BudgetServiceGetBudgetTransactionsCall {
    return try BudgetServiceGetBudgetTransactionsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol CalendarServiceGetBusinessDaysCall: ClientCallUnary {}

fileprivate final class CalendarServiceGetBusinessDaysCallBase: ClientCallUnaryBase<ListBusinessDaysRequest, ListBusinessDaysResponse>, CalendarServiceGetBusinessDaysCall {
  override class var method: String { return "/CalendarService/GetBusinessDays" }
}


/// Instantiate CalendarServiceServiceClient, then call methods of this protocol to make API calls.
public protocol CalendarServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func getBusinessDays(_ request: ListBusinessDaysRequest, metadata customMetadata: Metadata, completion: @escaping (ListBusinessDaysResponse?, CallResult) -> Void) throws -> CalendarServiceGetBusinessDaysCall

}

public extension CalendarServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func getBusinessDays(_ request: ListBusinessDaysRequest, completion: @escaping (ListBusinessDaysResponse?, CallResult) -> Void) throws -> CalendarServiceGetBusinessDaysCall {
    return try self.getBusinessDays(request, metadata: self.metadata, completion: completion)
  }

}

public final class CalendarServiceServiceClient: ServiceClientBase, CalendarServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func getBusinessDays(_ request: ListBusinessDaysRequest, metadata customMetadata: Metadata, completion: @escaping (ListBusinessDaysResponse?, CallResult) -> Void) throws -> CalendarServiceGetBusinessDaysCall {
    return try CalendarServiceGetBusinessDaysCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol CategoryServiceListCategoriesCall: ClientCallUnary {}

fileprivate final class CategoryServiceListCategoriesCallBase: ClientCallUnaryBase<ListCategoriesRequest, ListCategoriesResponse>, CategoryServiceListCategoriesCall {
  override class var method: String { return "/CategoryService/ListCategories" }
}


/// Instantiate CategoryServiceServiceClient, then call methods of this protocol to make API calls.
public protocol CategoryServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func listCategories(_ request: ListCategoriesRequest, metadata customMetadata: Metadata, completion: @escaping (ListCategoriesResponse?, CallResult) -> Void) throws -> CategoryServiceListCategoriesCall

}

public extension CategoryServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func listCategories(_ request: ListCategoriesRequest, completion: @escaping (ListCategoriesResponse?, CallResult) -> Void) throws -> CategoryServiceListCategoriesCall {
    return try self.listCategories(request, metadata: self.metadata, completion: completion)
  }

}

public final class CategoryServiceServiceClient: ServiceClientBase, CategoryServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func listCategories(_ request: ListCategoriesRequest, metadata customMetadata: Metadata, completion: @escaping (ListCategoriesResponse?, CallResult) -> Void) throws -> CategoryServiceListCategoriesCall {
    return try CategoryServiceListCategoriesCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol ConsentServiceListConsentsCall: ClientCallUnary {}

fileprivate final class ConsentServiceListConsentsCallBase: ClientCallUnaryBase<ListConsentsRequest, ListConsentsResponse>, ConsentServiceListConsentsCall {
  override class var method: String { return "/ConsentService/ListConsents" }
}

public protocol ConsentServiceConsentDetailsCall: ClientCallUnary {}

fileprivate final class ConsentServiceConsentDetailsCallBase: ClientCallUnaryBase<ConsentDetailsRequest, ConsentDetailsResponse>, ConsentServiceConsentDetailsCall {
  override class var method: String { return "/ConsentService/ConsentDetails" }
}

public protocol ConsentServiceAvailableConsentsCall: ClientCallUnary {}

fileprivate final class ConsentServiceAvailableConsentsCallBase: ClientCallUnaryBase<AvailableConsentsRequest, AvailableConsentsResponse>, ConsentServiceAvailableConsentsCall {
  override class var method: String { return "/ConsentService/AvailableConsents" }
}

public protocol ConsentServiceListUserConsentsCall: ClientCallUnary {}

fileprivate final class ConsentServiceListUserConsentsCallBase: ClientCallUnaryBase<UserConsentsListRequest, UserConsentsListResponse>, ConsentServiceListUserConsentsCall {
  override class var method: String { return "/ConsentService/ListUserConsents" }
}

public protocol ConsentServiceGiveConsentCall: ClientCallUnary {}

fileprivate final class ConsentServiceGiveConsentCallBase: ClientCallUnaryBase<GiveConsentRequest, GiveConsentResponse>, ConsentServiceGiveConsentCall {
  override class var method: String { return "/ConsentService/GiveConsent" }
}

public protocol ConsentServiceUserConsentDetailsCall: ClientCallUnary {}

fileprivate final class ConsentServiceUserConsentDetailsCallBase: ClientCallUnaryBase<UserConsentDetailsRequest, UserConsentDetailsResponse>, ConsentServiceUserConsentDetailsCall {
  override class var method: String { return "/ConsentService/UserConsentDetails" }
}


/// Instantiate ConsentServiceServiceClient, then call methods of this protocol to make API calls.
public protocol ConsentServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func listConsents(_ request: ListConsentsRequest, metadata customMetadata: Metadata, completion: @escaping (ListConsentsResponse?, CallResult) -> Void) throws -> ConsentServiceListConsentsCall

  /// Asynchronous. Unary.
  @discardableResult
  func consentDetails(_ request: ConsentDetailsRequest, metadata customMetadata: Metadata, completion: @escaping (ConsentDetailsResponse?, CallResult) -> Void) throws -> ConsentServiceConsentDetailsCall

  /// Asynchronous. Unary.
  @discardableResult
  func availableConsents(_ request: AvailableConsentsRequest, metadata customMetadata: Metadata, completion: @escaping (AvailableConsentsResponse?, CallResult) -> Void) throws -> ConsentServiceAvailableConsentsCall

  /// Asynchronous. Unary.
  @discardableResult
  func listUserConsents(_ request: UserConsentsListRequest, metadata customMetadata: Metadata, completion: @escaping (UserConsentsListResponse?, CallResult) -> Void) throws -> ConsentServiceListUserConsentsCall

  /// Asynchronous. Unary.
  @discardableResult
  func giveConsent(_ request: GiveConsentRequest, metadata customMetadata: Metadata, completion: @escaping (GiveConsentResponse?, CallResult) -> Void) throws -> ConsentServiceGiveConsentCall

  /// Asynchronous. Unary.
  @discardableResult
  func userConsentDetails(_ request: UserConsentDetailsRequest, metadata customMetadata: Metadata, completion: @escaping (UserConsentDetailsResponse?, CallResult) -> Void) throws -> ConsentServiceUserConsentDetailsCall

}

public extension ConsentServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func listConsents(_ request: ListConsentsRequest, completion: @escaping (ListConsentsResponse?, CallResult) -> Void) throws -> ConsentServiceListConsentsCall {
    return try self.listConsents(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func consentDetails(_ request: ConsentDetailsRequest, completion: @escaping (ConsentDetailsResponse?, CallResult) -> Void) throws -> ConsentServiceConsentDetailsCall {
    return try self.consentDetails(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func availableConsents(_ request: AvailableConsentsRequest, completion: @escaping (AvailableConsentsResponse?, CallResult) -> Void) throws -> ConsentServiceAvailableConsentsCall {
    return try self.availableConsents(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func listUserConsents(_ request: UserConsentsListRequest, completion: @escaping (UserConsentsListResponse?, CallResult) -> Void) throws -> ConsentServiceListUserConsentsCall {
    return try self.listUserConsents(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func giveConsent(_ request: GiveConsentRequest, completion: @escaping (GiveConsentResponse?, CallResult) -> Void) throws -> ConsentServiceGiveConsentCall {
    return try self.giveConsent(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func userConsentDetails(_ request: UserConsentDetailsRequest, completion: @escaping (UserConsentDetailsResponse?, CallResult) -> Void) throws -> ConsentServiceUserConsentDetailsCall {
    return try self.userConsentDetails(request, metadata: self.metadata, completion: completion)
  }

}

public final class ConsentServiceServiceClient: ServiceClientBase, ConsentServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func listConsents(_ request: ListConsentsRequest, metadata customMetadata: Metadata, completion: @escaping (ListConsentsResponse?, CallResult) -> Void) throws -> ConsentServiceListConsentsCall {
    return try ConsentServiceListConsentsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func consentDetails(_ request: ConsentDetailsRequest, metadata customMetadata: Metadata, completion: @escaping (ConsentDetailsResponse?, CallResult) -> Void) throws -> ConsentServiceConsentDetailsCall {
    return try ConsentServiceConsentDetailsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func availableConsents(_ request: AvailableConsentsRequest, metadata customMetadata: Metadata, completion: @escaping (AvailableConsentsResponse?, CallResult) -> Void) throws -> ConsentServiceAvailableConsentsCall {
    return try ConsentServiceAvailableConsentsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func listUserConsents(_ request: UserConsentsListRequest, metadata customMetadata: Metadata, completion: @escaping (UserConsentsListResponse?, CallResult) -> Void) throws -> ConsentServiceListUserConsentsCall {
    return try ConsentServiceListUserConsentsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func giveConsent(_ request: GiveConsentRequest, metadata customMetadata: Metadata, completion: @escaping (GiveConsentResponse?, CallResult) -> Void) throws -> ConsentServiceGiveConsentCall {
    return try ConsentServiceGiveConsentCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func userConsentDetails(_ request: UserConsentDetailsRequest, metadata customMetadata: Metadata, completion: @escaping (UserConsentDetailsResponse?, CallResult) -> Void) throws -> ConsentServiceUserConsentDetailsCall {
    return try ConsentServiceUserConsentDetailsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol CredentialServiceListCredentialsCall: ClientCallUnary {}

fileprivate final class CredentialServiceListCredentialsCallBase: ClientCallUnaryBase<ListCredentialsRequest, ListCredentialsResponse>, CredentialServiceListCredentialsCall {
  override class var method: String { return "/CredentialService/ListCredentials" }
}

public protocol CredentialServiceCreateCredentialCall: ClientCallUnary {}

fileprivate final class CredentialServiceCreateCredentialCallBase: ClientCallUnaryBase<CreateCredentialRequest, CreateCredentialResponse>, CredentialServiceCreateCredentialCall {
  override class var method: String { return "/CredentialService/CreateCredential" }
}

public protocol CredentialServiceDeleteCredentialCall: ClientCallUnary {}

fileprivate final class CredentialServiceDeleteCredentialCallBase: ClientCallUnaryBase<DeleteCredentialRequest, DeleteCredentialResponse>, CredentialServiceDeleteCredentialCall {
  override class var method: String { return "/CredentialService/DeleteCredential" }
}

public protocol CredentialServiceUpdateCredentialCall: ClientCallUnary {}

fileprivate final class CredentialServiceUpdateCredentialCallBase: ClientCallUnaryBase<UpdateCredentialRequest, UpdateCredentialResponse>, CredentialServiceUpdateCredentialCall {
  override class var method: String { return "/CredentialService/UpdateCredential" }
}

public protocol CredentialServiceRefreshCredentialsCall: ClientCallUnary {}

fileprivate final class CredentialServiceRefreshCredentialsCallBase: ClientCallUnaryBase<RefreshCredentialsRequest, RefreshCredentialsResponse>, CredentialServiceRefreshCredentialsCall {
  override class var method: String { return "/CredentialService/RefreshCredentials" }
}

public protocol CredentialServiceSupplementInformationCall: ClientCallUnary {}

fileprivate final class CredentialServiceSupplementInformationCallBase: ClientCallUnaryBase<SupplementInformationRequest, SupplementInformationResponse>, CredentialServiceSupplementInformationCall {
  override class var method: String { return "/CredentialService/SupplementInformation" }
}

public protocol CredentialServiceCancelSupplementInformationCall: ClientCallUnary {}

fileprivate final class CredentialServiceCancelSupplementInformationCallBase: ClientCallUnaryBase<CancelSupplementInformationRequest, CancelSupplementInformationResponse>, CredentialServiceCancelSupplementInformationCall {
  override class var method: String { return "/CredentialService/CancelSupplementInformation" }
}

public protocol CredentialServiceEnableCredentialCall: ClientCallUnary {}

fileprivate final class CredentialServiceEnableCredentialCallBase: ClientCallUnaryBase<EnableCredentialRequest, EnableCredentialResponse>, CredentialServiceEnableCredentialCall {
  override class var method: String { return "/CredentialService/EnableCredential" }
}

public protocol CredentialServiceDisableCredentialCall: ClientCallUnary {}

fileprivate final class CredentialServiceDisableCredentialCallBase: ClientCallUnaryBase<DisableCredentialRequest, DisableCredentialResponse>, CredentialServiceDisableCredentialCall {
  override class var method: String { return "/CredentialService/DisableCredential" }
}

public protocol CredentialServiceThirdPartyCallbackCall: ClientCallUnary {}

fileprivate final class CredentialServiceThirdPartyCallbackCallBase: ClientCallUnaryBase<ThirdPartyCallbackRequest, ThirdPartyCallbackResponse>, CredentialServiceThirdPartyCallbackCall {
  override class var method: String { return "/CredentialService/ThirdPartyCallback" }
}


/// Instantiate CredentialServiceServiceClient, then call methods of this protocol to make API calls.
public protocol CredentialServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func listCredentials(_ request: ListCredentialsRequest, metadata customMetadata: Metadata, completion: @escaping (ListCredentialsResponse?, CallResult) -> Void) throws -> CredentialServiceListCredentialsCall

  /// Asynchronous. Unary.
  @discardableResult
  func createCredential(_ request: CreateCredentialRequest, metadata customMetadata: Metadata, completion: @escaping (CreateCredentialResponse?, CallResult) -> Void) throws -> CredentialServiceCreateCredentialCall

  /// Asynchronous. Unary.
  @discardableResult
  func deleteCredential(_ request: DeleteCredentialRequest, metadata customMetadata: Metadata, completion: @escaping (DeleteCredentialResponse?, CallResult) -> Void) throws -> CredentialServiceDeleteCredentialCall

  /// Asynchronous. Unary.
  @discardableResult
  func updateCredential(_ request: UpdateCredentialRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateCredentialResponse?, CallResult) -> Void) throws -> CredentialServiceUpdateCredentialCall

  /// Asynchronous. Unary.
  @discardableResult
  func refreshCredentials(_ request: RefreshCredentialsRequest, metadata customMetadata: Metadata, completion: @escaping (RefreshCredentialsResponse?, CallResult) -> Void) throws -> CredentialServiceRefreshCredentialsCall

  /// Asynchronous. Unary.
  @discardableResult
  func supplementInformation(_ request: SupplementInformationRequest, metadata customMetadata: Metadata, completion: @escaping (SupplementInformationResponse?, CallResult) -> Void) throws -> CredentialServiceSupplementInformationCall

  /// Asynchronous. Unary.
  @discardableResult
  func cancelSupplementInformation(_ request: CancelSupplementInformationRequest, metadata customMetadata: Metadata, completion: @escaping (CancelSupplementInformationResponse?, CallResult) -> Void) throws -> CredentialServiceCancelSupplementInformationCall

  /// Asynchronous. Unary.
  @discardableResult
  func enableCredential(_ request: EnableCredentialRequest, metadata customMetadata: Metadata, completion: @escaping (EnableCredentialResponse?, CallResult) -> Void) throws -> CredentialServiceEnableCredentialCall

  /// Asynchronous. Unary.
  @discardableResult
  func disableCredential(_ request: DisableCredentialRequest, metadata customMetadata: Metadata, completion: @escaping (DisableCredentialResponse?, CallResult) -> Void) throws -> CredentialServiceDisableCredentialCall

  /// Asynchronous. Unary.
  @discardableResult
  func thirdPartyCallback(_ request: ThirdPartyCallbackRequest, metadata customMetadata: Metadata, completion: @escaping (ThirdPartyCallbackResponse?, CallResult) -> Void) throws -> CredentialServiceThirdPartyCallbackCall

}

public extension CredentialServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func listCredentials(_ request: ListCredentialsRequest, completion: @escaping (ListCredentialsResponse?, CallResult) -> Void) throws -> CredentialServiceListCredentialsCall {
    return try self.listCredentials(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func createCredential(_ request: CreateCredentialRequest, completion: @escaping (CreateCredentialResponse?, CallResult) -> Void) throws -> CredentialServiceCreateCredentialCall {
    return try self.createCredential(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func deleteCredential(_ request: DeleteCredentialRequest, completion: @escaping (DeleteCredentialResponse?, CallResult) -> Void) throws -> CredentialServiceDeleteCredentialCall {
    return try self.deleteCredential(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func updateCredential(_ request: UpdateCredentialRequest, completion: @escaping (UpdateCredentialResponse?, CallResult) -> Void) throws -> CredentialServiceUpdateCredentialCall {
    return try self.updateCredential(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func refreshCredentials(_ request: RefreshCredentialsRequest, completion: @escaping (RefreshCredentialsResponse?, CallResult) -> Void) throws -> CredentialServiceRefreshCredentialsCall {
    return try self.refreshCredentials(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func supplementInformation(_ request: SupplementInformationRequest, completion: @escaping (SupplementInformationResponse?, CallResult) -> Void) throws -> CredentialServiceSupplementInformationCall {
    return try self.supplementInformation(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func cancelSupplementInformation(_ request: CancelSupplementInformationRequest, completion: @escaping (CancelSupplementInformationResponse?, CallResult) -> Void) throws -> CredentialServiceCancelSupplementInformationCall {
    return try self.cancelSupplementInformation(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func enableCredential(_ request: EnableCredentialRequest, completion: @escaping (EnableCredentialResponse?, CallResult) -> Void) throws -> CredentialServiceEnableCredentialCall {
    return try self.enableCredential(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func disableCredential(_ request: DisableCredentialRequest, completion: @escaping (DisableCredentialResponse?, CallResult) -> Void) throws -> CredentialServiceDisableCredentialCall {
    return try self.disableCredential(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func thirdPartyCallback(_ request: ThirdPartyCallbackRequest, completion: @escaping (ThirdPartyCallbackResponse?, CallResult) -> Void) throws -> CredentialServiceThirdPartyCallbackCall {
    return try self.thirdPartyCallback(request, metadata: self.metadata, completion: completion)
  }

}

public final class CredentialServiceServiceClient: ServiceClientBase, CredentialServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func listCredentials(_ request: ListCredentialsRequest, metadata customMetadata: Metadata, completion: @escaping (ListCredentialsResponse?, CallResult) -> Void) throws -> CredentialServiceListCredentialsCall {
    return try CredentialServiceListCredentialsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func createCredential(_ request: CreateCredentialRequest, metadata customMetadata: Metadata, completion: @escaping (CreateCredentialResponse?, CallResult) -> Void) throws -> CredentialServiceCreateCredentialCall {
    return try CredentialServiceCreateCredentialCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func deleteCredential(_ request: DeleteCredentialRequest, metadata customMetadata: Metadata, completion: @escaping (DeleteCredentialResponse?, CallResult) -> Void) throws -> CredentialServiceDeleteCredentialCall {
    return try CredentialServiceDeleteCredentialCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func updateCredential(_ request: UpdateCredentialRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateCredentialResponse?, CallResult) -> Void) throws -> CredentialServiceUpdateCredentialCall {
    return try CredentialServiceUpdateCredentialCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func refreshCredentials(_ request: RefreshCredentialsRequest, metadata customMetadata: Metadata, completion: @escaping (RefreshCredentialsResponse?, CallResult) -> Void) throws -> CredentialServiceRefreshCredentialsCall {
    return try CredentialServiceRefreshCredentialsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func supplementInformation(_ request: SupplementInformationRequest, metadata customMetadata: Metadata, completion: @escaping (SupplementInformationResponse?, CallResult) -> Void) throws -> CredentialServiceSupplementInformationCall {
    return try CredentialServiceSupplementInformationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func cancelSupplementInformation(_ request: CancelSupplementInformationRequest, metadata customMetadata: Metadata, completion: @escaping (CancelSupplementInformationResponse?, CallResult) -> Void) throws -> CredentialServiceCancelSupplementInformationCall {
    return try CredentialServiceCancelSupplementInformationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func enableCredential(_ request: EnableCredentialRequest, metadata customMetadata: Metadata, completion: @escaping (EnableCredentialResponse?, CallResult) -> Void) throws -> CredentialServiceEnableCredentialCall {
    return try CredentialServiceEnableCredentialCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func disableCredential(_ request: DisableCredentialRequest, metadata customMetadata: Metadata, completion: @escaping (DisableCredentialResponse?, CallResult) -> Void) throws -> CredentialServiceDisableCredentialCall {
    return try CredentialServiceDisableCredentialCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func thirdPartyCallback(_ request: ThirdPartyCallbackRequest, metadata customMetadata: Metadata, completion: @escaping (ThirdPartyCallbackResponse?, CallResult) -> Void) throws -> CredentialServiceThirdPartyCallbackCall {
    return try CredentialServiceThirdPartyCallbackCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol DeviceServiceRegisterPushNotificationTokenCall: ClientCallUnary {}

fileprivate final class DeviceServiceRegisterPushNotificationTokenCallBase: ClientCallUnaryBase<RegisterPushNotificationTokenRequest, RegisterPushNotificationTokenResponse>, DeviceServiceRegisterPushNotificationTokenCall {
  override class var method: String { return "/DeviceService/RegisterPushNotificationToken" }
}

public protocol DeviceServiceGetDeviceConfigurationCall: ClientCallUnary {}

fileprivate final class DeviceServiceGetDeviceConfigurationCallBase: ClientCallUnaryBase<GetDeviceConfigurationRequest, DeviceConfigurationResponse>, DeviceServiceGetDeviceConfigurationCall {
  override class var method: String { return "/DeviceService/GetDeviceConfiguration" }
}

public protocol DeviceServiceSetOriginCall: ClientCallUnary {}

fileprivate final class DeviceServiceSetOriginCallBase: ClientCallUnaryBase<SetOriginRequest, SetOriginResponse>, DeviceServiceSetOriginCall {
  override class var method: String { return "/DeviceService/SetOrigin" }
}

public protocol DeviceServiceDeleteDeviceCall: ClientCallUnary {}

fileprivate final class DeviceServiceDeleteDeviceCallBase: ClientCallUnaryBase<DeleteDeviceRequest, DeleteDeviceResponse>, DeviceServiceDeleteDeviceCall {
  override class var method: String { return "/DeviceService/DeleteDevice" }
}

public protocol DeviceServiceListDevicesCall: ClientCallUnary {}

fileprivate final class DeviceServiceListDevicesCallBase: ClientCallUnaryBase<ListDevicesRequest, ListDevicesResponse>, DeviceServiceListDevicesCall {
  override class var method: String { return "/DeviceService/ListDevices" }
}


/// Instantiate DeviceServiceServiceClient, then call methods of this protocol to make API calls.
public protocol DeviceServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func registerPushNotificationToken(_ request: RegisterPushNotificationTokenRequest, metadata customMetadata: Metadata, completion: @escaping (RegisterPushNotificationTokenResponse?, CallResult) -> Void) throws -> DeviceServiceRegisterPushNotificationTokenCall

  /// Asynchronous. Unary.
  @discardableResult
  func getDeviceConfiguration(_ request: GetDeviceConfigurationRequest, metadata customMetadata: Metadata, completion: @escaping (DeviceConfigurationResponse?, CallResult) -> Void) throws -> DeviceServiceGetDeviceConfigurationCall

  /// Asynchronous. Unary.
  @discardableResult
  func setOrigin(_ request: SetOriginRequest, metadata customMetadata: Metadata, completion: @escaping (SetOriginResponse?, CallResult) -> Void) throws -> DeviceServiceSetOriginCall

  /// Asynchronous. Unary.
  @discardableResult
  func deleteDevice(_ request: DeleteDeviceRequest, metadata customMetadata: Metadata, completion: @escaping (DeleteDeviceResponse?, CallResult) -> Void) throws -> DeviceServiceDeleteDeviceCall

  /// Asynchronous. Unary.
  @discardableResult
  func listDevices(_ request: ListDevicesRequest, metadata customMetadata: Metadata, completion: @escaping (ListDevicesResponse?, CallResult) -> Void) throws -> DeviceServiceListDevicesCall

}

public extension DeviceServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func registerPushNotificationToken(_ request: RegisterPushNotificationTokenRequest, completion: @escaping (RegisterPushNotificationTokenResponse?, CallResult) -> Void) throws -> DeviceServiceRegisterPushNotificationTokenCall {
    return try self.registerPushNotificationToken(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getDeviceConfiguration(_ request: GetDeviceConfigurationRequest, completion: @escaping (DeviceConfigurationResponse?, CallResult) -> Void) throws -> DeviceServiceGetDeviceConfigurationCall {
    return try self.getDeviceConfiguration(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func setOrigin(_ request: SetOriginRequest, completion: @escaping (SetOriginResponse?, CallResult) -> Void) throws -> DeviceServiceSetOriginCall {
    return try self.setOrigin(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func deleteDevice(_ request: DeleteDeviceRequest, completion: @escaping (DeleteDeviceResponse?, CallResult) -> Void) throws -> DeviceServiceDeleteDeviceCall {
    return try self.deleteDevice(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func listDevices(_ request: ListDevicesRequest, completion: @escaping (ListDevicesResponse?, CallResult) -> Void) throws -> DeviceServiceListDevicesCall {
    return try self.listDevices(request, metadata: self.metadata, completion: completion)
  }

}

public final class DeviceServiceServiceClient: ServiceClientBase, DeviceServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func registerPushNotificationToken(_ request: RegisterPushNotificationTokenRequest, metadata customMetadata: Metadata, completion: @escaping (RegisterPushNotificationTokenResponse?, CallResult) -> Void) throws -> DeviceServiceRegisterPushNotificationTokenCall {
    return try DeviceServiceRegisterPushNotificationTokenCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getDeviceConfiguration(_ request: GetDeviceConfigurationRequest, metadata customMetadata: Metadata, completion: @escaping (DeviceConfigurationResponse?, CallResult) -> Void) throws -> DeviceServiceGetDeviceConfigurationCall {
    return try DeviceServiceGetDeviceConfigurationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func setOrigin(_ request: SetOriginRequest, metadata customMetadata: Metadata, completion: @escaping (SetOriginResponse?, CallResult) -> Void) throws -> DeviceServiceSetOriginCall {
    return try DeviceServiceSetOriginCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func deleteDevice(_ request: DeleteDeviceRequest, metadata customMetadata: Metadata, completion: @escaping (DeleteDeviceResponse?, CallResult) -> Void) throws -> DeviceServiceDeleteDeviceCall {
    return try DeviceServiceDeleteDeviceCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func listDevices(_ request: ListDevicesRequest, metadata customMetadata: Metadata, completion: @escaping (ListDevicesResponse?, CallResult) -> Void) throws -> DeviceServiceListDevicesCall {
    return try DeviceServiceListDevicesCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol EmailAndPasswordAuthenticationServiceEmailAndPasswordAuthenticationCall: ClientCallUnary {}

fileprivate final class EmailAndPasswordAuthenticationServiceEmailAndPasswordAuthenticationCallBase: ClientCallUnaryBase<EmailAndPasswordAuthenticationRequest, EmailAndPasswordAuthenticationResponse>, EmailAndPasswordAuthenticationServiceEmailAndPasswordAuthenticationCall {
  override class var method: String { return "/EmailAndPasswordAuthenticationService/EmailAndPasswordAuthentication" }
}

public protocol EmailAndPasswordAuthenticationServiceForgotPasswordCall: ClientCallUnary {}

fileprivate final class EmailAndPasswordAuthenticationServiceForgotPasswordCallBase: ClientCallUnaryBase<ForgotPasswordRequest, ForgotPasswordResponse>, EmailAndPasswordAuthenticationServiceForgotPasswordCall {
  override class var method: String { return "/EmailAndPasswordAuthenticationService/ForgotPassword" }
}

public protocol EmailAndPasswordAuthenticationServiceResetPasswordCall: ClientCallUnary {}

fileprivate final class EmailAndPasswordAuthenticationServiceResetPasswordCallBase: ClientCallUnaryBase<ResetPasswordRequest, ResetPasswordResponse>, EmailAndPasswordAuthenticationServiceResetPasswordCall {
  override class var method: String { return "/EmailAndPasswordAuthenticationService/ResetPassword" }
}

public protocol EmailAndPasswordAuthenticationServiceUpdatePasswordCall: ClientCallUnary {}

fileprivate final class EmailAndPasswordAuthenticationServiceUpdatePasswordCallBase: ClientCallUnaryBase<UpdatePasswordRequest, UpdatePasswordResponse>, EmailAndPasswordAuthenticationServiceUpdatePasswordCall {
  override class var method: String { return "/EmailAndPasswordAuthenticationService/UpdatePassword" }
}

public protocol EmailAndPasswordAuthenticationServiceUpdateEmailCall: ClientCallUnary {}

fileprivate final class EmailAndPasswordAuthenticationServiceUpdateEmailCallBase: ClientCallUnaryBase<UpdateEmailRequest, UpdateEmailResponse>, EmailAndPasswordAuthenticationServiceUpdateEmailCall {
  override class var method: String { return "/EmailAndPasswordAuthenticationService/UpdateEmail" }
}


/// Instantiate EmailAndPasswordAuthenticationServiceServiceClient, then call methods of this protocol to make API calls.
public protocol EmailAndPasswordAuthenticationServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func emailAndPasswordAuthentication(_ request: EmailAndPasswordAuthenticationRequest, metadata customMetadata: Metadata, completion: @escaping (EmailAndPasswordAuthenticationResponse?, CallResult) -> Void) throws -> EmailAndPasswordAuthenticationServiceEmailAndPasswordAuthenticationCall

  /// Asynchronous. Unary.
  @discardableResult
  func forgotPassword(_ request: ForgotPasswordRequest, metadata customMetadata: Metadata, completion: @escaping (ForgotPasswordResponse?, CallResult) -> Void) throws -> EmailAndPasswordAuthenticationServiceForgotPasswordCall

  /// Asynchronous. Unary.
  @discardableResult
  func resetPassword(_ request: ResetPasswordRequest, metadata customMetadata: Metadata, completion: @escaping (ResetPasswordResponse?, CallResult) -> Void) throws -> EmailAndPasswordAuthenticationServiceResetPasswordCall

  /// Asynchronous. Unary.
  @discardableResult
  func updatePassword(_ request: UpdatePasswordRequest, metadata customMetadata: Metadata, completion: @escaping (UpdatePasswordResponse?, CallResult) -> Void) throws -> EmailAndPasswordAuthenticationServiceUpdatePasswordCall

  /// Asynchronous. Unary.
  @discardableResult
  func updateEmail(_ request: UpdateEmailRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateEmailResponse?, CallResult) -> Void) throws -> EmailAndPasswordAuthenticationServiceUpdateEmailCall

}

public extension EmailAndPasswordAuthenticationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func emailAndPasswordAuthentication(_ request: EmailAndPasswordAuthenticationRequest, completion: @escaping (EmailAndPasswordAuthenticationResponse?, CallResult) -> Void) throws -> EmailAndPasswordAuthenticationServiceEmailAndPasswordAuthenticationCall {
    return try self.emailAndPasswordAuthentication(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func forgotPassword(_ request: ForgotPasswordRequest, completion: @escaping (ForgotPasswordResponse?, CallResult) -> Void) throws -> EmailAndPasswordAuthenticationServiceForgotPasswordCall {
    return try self.forgotPassword(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func resetPassword(_ request: ResetPasswordRequest, completion: @escaping (ResetPasswordResponse?, CallResult) -> Void) throws -> EmailAndPasswordAuthenticationServiceResetPasswordCall {
    return try self.resetPassword(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func updatePassword(_ request: UpdatePasswordRequest, completion: @escaping (UpdatePasswordResponse?, CallResult) -> Void) throws -> EmailAndPasswordAuthenticationServiceUpdatePasswordCall {
    return try self.updatePassword(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func updateEmail(_ request: UpdateEmailRequest, completion: @escaping (UpdateEmailResponse?, CallResult) -> Void) throws -> EmailAndPasswordAuthenticationServiceUpdateEmailCall {
    return try self.updateEmail(request, metadata: self.metadata, completion: completion)
  }

}

public final class EmailAndPasswordAuthenticationServiceServiceClient: ServiceClientBase, EmailAndPasswordAuthenticationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func emailAndPasswordAuthentication(_ request: EmailAndPasswordAuthenticationRequest, metadata customMetadata: Metadata, completion: @escaping (EmailAndPasswordAuthenticationResponse?, CallResult) -> Void) throws -> EmailAndPasswordAuthenticationServiceEmailAndPasswordAuthenticationCall {
    return try EmailAndPasswordAuthenticationServiceEmailAndPasswordAuthenticationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func forgotPassword(_ request: ForgotPasswordRequest, metadata customMetadata: Metadata, completion: @escaping (ForgotPasswordResponse?, CallResult) -> Void) throws -> EmailAndPasswordAuthenticationServiceForgotPasswordCall {
    return try EmailAndPasswordAuthenticationServiceForgotPasswordCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func resetPassword(_ request: ResetPasswordRequest, metadata customMetadata: Metadata, completion: @escaping (ResetPasswordResponse?, CallResult) -> Void) throws -> EmailAndPasswordAuthenticationServiceResetPasswordCall {
    return try EmailAndPasswordAuthenticationServiceResetPasswordCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func updatePassword(_ request: UpdatePasswordRequest, metadata customMetadata: Metadata, completion: @escaping (UpdatePasswordResponse?, CallResult) -> Void) throws -> EmailAndPasswordAuthenticationServiceUpdatePasswordCall {
    return try EmailAndPasswordAuthenticationServiceUpdatePasswordCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func updateEmail(_ request: UpdateEmailRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateEmailResponse?, CallResult) -> Void) throws -> EmailAndPasswordAuthenticationServiceUpdateEmailCall {
    return try EmailAndPasswordAuthenticationServiceUpdateEmailCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol FollowServiceCreateFollowItemCall: ClientCallUnary {}

fileprivate final class FollowServiceCreateFollowItemCallBase: ClientCallUnaryBase<CreateFollowItemRequest, CreateFollowItemResponse>, FollowServiceCreateFollowItemCall {
  override class var method: String { return "/FollowService/CreateFollowItem" }
}

public protocol FollowServiceUpdateFollowItemCall: ClientCallUnary {}

fileprivate final class FollowServiceUpdateFollowItemCallBase: ClientCallUnaryBase<UpdateFollowItemRequest, UpdateFollowItemResponse>, FollowServiceUpdateFollowItemCall {
  override class var method: String { return "/FollowService/UpdateFollowItem" }
}

public protocol FollowServiceGetFollowItemCall: ClientCallUnary {}

fileprivate final class FollowServiceGetFollowItemCallBase: ClientCallUnaryBase<GetFollowItemRequest, GetFollowItemResponse>, FollowServiceGetFollowItemCall {
  override class var method: String { return "/FollowService/GetFollowItem" }
}

public protocol FollowServiceGetFollowItemHistoryCall: ClientCallUnary {}

fileprivate final class FollowServiceGetFollowItemHistoryCallBase: ClientCallUnaryBase<GetFollowItemHistoryRequest, GetFollowItemHistoryResponse>, FollowServiceGetFollowItemHistoryCall {
  override class var method: String { return "/FollowService/GetFollowItemHistory" }
}

public protocol FollowServiceDeleteFollowItemCall: ClientCallUnary {}

fileprivate final class FollowServiceDeleteFollowItemCallBase: ClientCallUnaryBase<DeleteFollowItemRequest, DeleteFollowItemResponse>, FollowServiceDeleteFollowItemCall {
  override class var method: String { return "/FollowService/DeleteFollowItem" }
}

public protocol FollowServiceListFollowItemCall: ClientCallUnary {}

fileprivate final class FollowServiceListFollowItemCallBase: ClientCallUnaryBase<ListFollowItemRequest, ListFollowItemResponse>, FollowServiceListFollowItemCall {
  override class var method: String { return "/FollowService/ListFollowItem" }
}

public protocol FollowServiceSuggestFollowItemCall: ClientCallUnary {}

fileprivate final class FollowServiceSuggestFollowItemCallBase: ClientCallUnaryBase<SuggestFollowItemRequest, SuggestFollowItemResponse>, FollowServiceSuggestFollowItemCall {
  override class var method: String { return "/FollowService/SuggestFollowItem" }
}


/// Instantiate FollowServiceServiceClient, then call methods of this protocol to make API calls.
public protocol FollowServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func createFollowItem(_ request: CreateFollowItemRequest, metadata customMetadata: Metadata, completion: @escaping (CreateFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceCreateFollowItemCall

  /// Asynchronous. Unary.
  @discardableResult
  func updateFollowItem(_ request: UpdateFollowItemRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceUpdateFollowItemCall

  /// Asynchronous. Unary.
  @discardableResult
  func getFollowItem(_ request: GetFollowItemRequest, metadata customMetadata: Metadata, completion: @escaping (GetFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceGetFollowItemCall

  /// Asynchronous. Unary.
  @discardableResult
  func getFollowItemHistory(_ request: GetFollowItemHistoryRequest, metadata customMetadata: Metadata, completion: @escaping (GetFollowItemHistoryResponse?, CallResult) -> Void) throws -> FollowServiceGetFollowItemHistoryCall

  /// Asynchronous. Unary.
  @discardableResult
  func deleteFollowItem(_ request: DeleteFollowItemRequest, metadata customMetadata: Metadata, completion: @escaping (DeleteFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceDeleteFollowItemCall

  /// Asynchronous. Unary.
  @discardableResult
  func listFollowItem(_ request: ListFollowItemRequest, metadata customMetadata: Metadata, completion: @escaping (ListFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceListFollowItemCall

  /// Asynchronous. Unary.
  @discardableResult
  func suggestFollowItem(_ request: SuggestFollowItemRequest, metadata customMetadata: Metadata, completion: @escaping (SuggestFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceSuggestFollowItemCall

}

public extension FollowServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func createFollowItem(_ request: CreateFollowItemRequest, completion: @escaping (CreateFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceCreateFollowItemCall {
    return try self.createFollowItem(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func updateFollowItem(_ request: UpdateFollowItemRequest, completion: @escaping (UpdateFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceUpdateFollowItemCall {
    return try self.updateFollowItem(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getFollowItem(_ request: GetFollowItemRequest, completion: @escaping (GetFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceGetFollowItemCall {
    return try self.getFollowItem(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getFollowItemHistory(_ request: GetFollowItemHistoryRequest, completion: @escaping (GetFollowItemHistoryResponse?, CallResult) -> Void) throws -> FollowServiceGetFollowItemHistoryCall {
    return try self.getFollowItemHistory(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func deleteFollowItem(_ request: DeleteFollowItemRequest, completion: @escaping (DeleteFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceDeleteFollowItemCall {
    return try self.deleteFollowItem(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func listFollowItem(_ request: ListFollowItemRequest, completion: @escaping (ListFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceListFollowItemCall {
    return try self.listFollowItem(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func suggestFollowItem(_ request: SuggestFollowItemRequest, completion: @escaping (SuggestFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceSuggestFollowItemCall {
    return try self.suggestFollowItem(request, metadata: self.metadata, completion: completion)
  }

}

public final class FollowServiceServiceClient: ServiceClientBase, FollowServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func createFollowItem(_ request: CreateFollowItemRequest, metadata customMetadata: Metadata, completion: @escaping (CreateFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceCreateFollowItemCall {
    return try FollowServiceCreateFollowItemCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func updateFollowItem(_ request: UpdateFollowItemRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceUpdateFollowItemCall {
    return try FollowServiceUpdateFollowItemCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getFollowItem(_ request: GetFollowItemRequest, metadata customMetadata: Metadata, completion: @escaping (GetFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceGetFollowItemCall {
    return try FollowServiceGetFollowItemCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getFollowItemHistory(_ request: GetFollowItemHistoryRequest, metadata customMetadata: Metadata, completion: @escaping (GetFollowItemHistoryResponse?, CallResult) -> Void) throws -> FollowServiceGetFollowItemHistoryCall {
    return try FollowServiceGetFollowItemHistoryCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func deleteFollowItem(_ request: DeleteFollowItemRequest, metadata customMetadata: Metadata, completion: @escaping (DeleteFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceDeleteFollowItemCall {
    return try FollowServiceDeleteFollowItemCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func listFollowItem(_ request: ListFollowItemRequest, metadata customMetadata: Metadata, completion: @escaping (ListFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceListFollowItemCall {
    return try FollowServiceListFollowItemCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func suggestFollowItem(_ request: SuggestFollowItemRequest, metadata customMetadata: Metadata, completion: @escaping (SuggestFollowItemResponse?, CallResult) -> Void) throws -> FollowServiceSuggestFollowItemCall {
    return try FollowServiceSuggestFollowItemCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol IdentityServiceGetIdentityEventCall: ClientCallUnary {}

fileprivate final class IdentityServiceGetIdentityEventCallBase: ClientCallUnaryBase<GetIdentityEventRequest, IdentityEventResponse>, IdentityServiceGetIdentityEventCall {
  override class var method: String { return "/IdentityService/GetIdentityEvent" }
}

public protocol IdentityServiceGetIdentityEventSummaryListCall: ClientCallUnary {}

fileprivate final class IdentityServiceGetIdentityEventSummaryListCallBase: ClientCallUnaryBase<IdentityEventListRequest, IdentityEventListResponse>, IdentityServiceGetIdentityEventSummaryListCall {
  override class var method: String { return "/IdentityService/GetIdentityEventSummaryList" }
}

public protocol IdentityServiceSeenIdentityEventsCall: ClientCallUnary {}

fileprivate final class IdentityServiceSeenIdentityEventsCallBase: ClientCallUnaryBase<SeenIdentityEventRequest, SeenIdentityEventResponse>, IdentityServiceSeenIdentityEventsCall {
  override class var method: String { return "/IdentityService/SeenIdentityEvents" }
}

public protocol IdentityServiceAnswerIdentityEventCall: ClientCallUnary {}

fileprivate final class IdentityServiceAnswerIdentityEventCallBase: ClientCallUnaryBase<AnswerIdentityEventRequest, AnswerIdentityEventResponse>, IdentityServiceAnswerIdentityEventCall {
  override class var method: String { return "/IdentityService/AnswerIdentityEvent" }
}

public protocol IdentityServiceGetIdentityStateCall: ClientCallUnary {}

fileprivate final class IdentityServiceGetIdentityStateCallBase: ClientCallUnaryBase<IdentityStateRequest, IdentityStateResponse>, IdentityServiceGetIdentityStateCall {
  override class var method: String { return "/IdentityService/GetIdentityState" }
}

public protocol IdentityServiceActivateIdentityServiceCall: ClientCallUnary {}

fileprivate final class IdentityServiceActivateIdentityServiceCallBase: ClientCallUnaryBase<ActivateIdentityServiceRequest, ActivateIdentityServiceResponse>, IdentityServiceActivateIdentityServiceCall {
  override class var method: String { return "/IdentityService/ActivateIdentityService" }
}


/// Instantiate IdentityServiceServiceClient, then call methods of this protocol to make API calls.
public protocol IdentityServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func getIdentityEvent(_ request: GetIdentityEventRequest, metadata customMetadata: Metadata, completion: @escaping (IdentityEventResponse?, CallResult) -> Void) throws -> IdentityServiceGetIdentityEventCall

  /// Asynchronous. Unary.
  @discardableResult
  func getIdentityEventSummaryList(_ request: IdentityEventListRequest, metadata customMetadata: Metadata, completion: @escaping (IdentityEventListResponse?, CallResult) -> Void) throws -> IdentityServiceGetIdentityEventSummaryListCall

  /// Asynchronous. Unary.
  @discardableResult
  func seenIdentityEvents(_ request: SeenIdentityEventRequest, metadata customMetadata: Metadata, completion: @escaping (SeenIdentityEventResponse?, CallResult) -> Void) throws -> IdentityServiceSeenIdentityEventsCall

  /// Asynchronous. Unary.
  @discardableResult
  func answerIdentityEvent(_ request: AnswerIdentityEventRequest, metadata customMetadata: Metadata, completion: @escaping (AnswerIdentityEventResponse?, CallResult) -> Void) throws -> IdentityServiceAnswerIdentityEventCall

  /// Asynchronous. Unary.
  @discardableResult
  func getIdentityState(_ request: IdentityStateRequest, metadata customMetadata: Metadata, completion: @escaping (IdentityStateResponse?, CallResult) -> Void) throws -> IdentityServiceGetIdentityStateCall

  /// Asynchronous. Unary.
  @discardableResult
  func activateIdentityService(_ request: ActivateIdentityServiceRequest, metadata customMetadata: Metadata, completion: @escaping (ActivateIdentityServiceResponse?, CallResult) -> Void) throws -> IdentityServiceActivateIdentityServiceCall

}

public extension IdentityServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func getIdentityEvent(_ request: GetIdentityEventRequest, completion: @escaping (IdentityEventResponse?, CallResult) -> Void) throws -> IdentityServiceGetIdentityEventCall {
    return try self.getIdentityEvent(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getIdentityEventSummaryList(_ request: IdentityEventListRequest, completion: @escaping (IdentityEventListResponse?, CallResult) -> Void) throws -> IdentityServiceGetIdentityEventSummaryListCall {
    return try self.getIdentityEventSummaryList(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func seenIdentityEvents(_ request: SeenIdentityEventRequest, completion: @escaping (SeenIdentityEventResponse?, CallResult) -> Void) throws -> IdentityServiceSeenIdentityEventsCall {
    return try self.seenIdentityEvents(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func answerIdentityEvent(_ request: AnswerIdentityEventRequest, completion: @escaping (AnswerIdentityEventResponse?, CallResult) -> Void) throws -> IdentityServiceAnswerIdentityEventCall {
    return try self.answerIdentityEvent(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getIdentityState(_ request: IdentityStateRequest, completion: @escaping (IdentityStateResponse?, CallResult) -> Void) throws -> IdentityServiceGetIdentityStateCall {
    return try self.getIdentityState(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func activateIdentityService(_ request: ActivateIdentityServiceRequest, completion: @escaping (ActivateIdentityServiceResponse?, CallResult) -> Void) throws -> IdentityServiceActivateIdentityServiceCall {
    return try self.activateIdentityService(request, metadata: self.metadata, completion: completion)
  }

}

public final class IdentityServiceServiceClient: ServiceClientBase, IdentityServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func getIdentityEvent(_ request: GetIdentityEventRequest, metadata customMetadata: Metadata, completion: @escaping (IdentityEventResponse?, CallResult) -> Void) throws -> IdentityServiceGetIdentityEventCall {
    return try IdentityServiceGetIdentityEventCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getIdentityEventSummaryList(_ request: IdentityEventListRequest, metadata customMetadata: Metadata, completion: @escaping (IdentityEventListResponse?, CallResult) -> Void) throws -> IdentityServiceGetIdentityEventSummaryListCall {
    return try IdentityServiceGetIdentityEventSummaryListCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func seenIdentityEvents(_ request: SeenIdentityEventRequest, metadata customMetadata: Metadata, completion: @escaping (SeenIdentityEventResponse?, CallResult) -> Void) throws -> IdentityServiceSeenIdentityEventsCall {
    return try IdentityServiceSeenIdentityEventsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func answerIdentityEvent(_ request: AnswerIdentityEventRequest, metadata customMetadata: Metadata, completion: @escaping (AnswerIdentityEventResponse?, CallResult) -> Void) throws -> IdentityServiceAnswerIdentityEventCall {
    return try IdentityServiceAnswerIdentityEventCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getIdentityState(_ request: IdentityStateRequest, metadata customMetadata: Metadata, completion: @escaping (IdentityStateResponse?, CallResult) -> Void) throws -> IdentityServiceGetIdentityStateCall {
    return try IdentityServiceGetIdentityStateCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func activateIdentityService(_ request: ActivateIdentityServiceRequest, metadata customMetadata: Metadata, completion: @escaping (ActivateIdentityServiceResponse?, CallResult) -> Void) throws -> IdentityServiceActivateIdentityServiceCall {
    return try IdentityServiceActivateIdentityServiceCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol InsightsServiceListInsightsCall: ClientCallUnary {}

fileprivate final class InsightsServiceListInsightsCallBase: ClientCallUnaryBase<ListInsightsRequest, ListInsightsResponse>, InsightsServiceListInsightsCall {
  override class var method: String { return "/InsightsService/ListInsights" }
}

public protocol InsightsServiceListArchivedInsightsCall: ClientCallUnary {}

fileprivate final class InsightsServiceListArchivedInsightsCallBase: ClientCallUnaryBase<ListInsightsRequest, ListArchivedInsightsResponse>, InsightsServiceListArchivedInsightsCall {
  override class var method: String { return "/InsightsService/ListArchivedInsights" }
}

public protocol InsightsServiceSelectActionCall: ClientCallUnary {}

fileprivate final class InsightsServiceSelectActionCallBase: ClientCallUnaryBase<SelectInsightActionRequest, SelectInsightActionResponse>, InsightsServiceSelectActionCall {
  override class var method: String { return "/InsightsService/SelectAction" }
}


/// Instantiate InsightsServiceServiceClient, then call methods of this protocol to make API calls.
public protocol InsightsServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func listInsights(_ request: ListInsightsRequest, metadata customMetadata: Metadata, completion: @escaping (ListInsightsResponse?, CallResult) -> Void) throws -> InsightsServiceListInsightsCall

  /// Asynchronous. Unary.
  @discardableResult
  func listArchivedInsights(_ request: ListInsightsRequest, metadata customMetadata: Metadata, completion: @escaping (ListArchivedInsightsResponse?, CallResult) -> Void) throws -> InsightsServiceListArchivedInsightsCall

  /// Asynchronous. Unary.
  @discardableResult
  func selectAction(_ request: SelectInsightActionRequest, metadata customMetadata: Metadata, completion: @escaping (SelectInsightActionResponse?, CallResult) -> Void) throws -> InsightsServiceSelectActionCall

}

public extension InsightsServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func listInsights(_ request: ListInsightsRequest, completion: @escaping (ListInsightsResponse?, CallResult) -> Void) throws -> InsightsServiceListInsightsCall {
    return try self.listInsights(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func listArchivedInsights(_ request: ListInsightsRequest, completion: @escaping (ListArchivedInsightsResponse?, CallResult) -> Void) throws -> InsightsServiceListArchivedInsightsCall {
    return try self.listArchivedInsights(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func selectAction(_ request: SelectInsightActionRequest, completion: @escaping (SelectInsightActionResponse?, CallResult) -> Void) throws -> InsightsServiceSelectActionCall {
    return try self.selectAction(request, metadata: self.metadata, completion: completion)
  }

}

public final class InsightsServiceServiceClient: ServiceClientBase, InsightsServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func listInsights(_ request: ListInsightsRequest, metadata customMetadata: Metadata, completion: @escaping (ListInsightsResponse?, CallResult) -> Void) throws -> InsightsServiceListInsightsCall {
    return try InsightsServiceListInsightsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func listArchivedInsights(_ request: ListInsightsRequest, metadata customMetadata: Metadata, completion: @escaping (ListArchivedInsightsResponse?, CallResult) -> Void) throws -> InsightsServiceListArchivedInsightsCall {
    return try InsightsServiceListArchivedInsightsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func selectAction(_ request: SelectInsightActionRequest, metadata customMetadata: Metadata, completion: @escaping (SelectInsightActionResponse?, CallResult) -> Void) throws -> InsightsServiceSelectActionCall {
    return try InsightsServiceSelectActionCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol LoanServiceListLoansCall: ClientCallUnary {}

fileprivate final class LoanServiceListLoansCallBase: ClientCallUnaryBase<ListLoansRequest, ListLoansResponse>, LoanServiceListLoansCall {
  override class var method: String { return "/LoanService/ListLoans" }
}


/// Instantiate LoanServiceServiceClient, then call methods of this protocol to make API calls.
public protocol LoanServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func listLoans(_ request: ListLoansRequest, metadata customMetadata: Metadata, completion: @escaping (ListLoansResponse?, CallResult) -> Void) throws -> LoanServiceListLoansCall

}

public extension LoanServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func listLoans(_ request: ListLoansRequest, completion: @escaping (ListLoansResponse?, CallResult) -> Void) throws -> LoanServiceListLoansCall {
    return try self.listLoans(request, metadata: self.metadata, completion: completion)
  }

}

public final class LoanServiceServiceClient: ServiceClientBase, LoanServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func listLoans(_ request: ListLoansRequest, metadata customMetadata: Metadata, completion: @escaping (ListLoansResponse?, CallResult) -> Void) throws -> LoanServiceListLoansCall {
    return try LoanServiceListLoansCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol MobileBankIdAuthenticationServiceInitiateBankIdAuthenticationCall: ClientCallUnary {}

fileprivate final class MobileBankIdAuthenticationServiceInitiateBankIdAuthenticationCallBase: ClientCallUnaryBase<InitiateBankIdAuthenticationRequest, InitiateBankIdAuthenticationResponse>, MobileBankIdAuthenticationServiceInitiateBankIdAuthenticationCall {
  override class var method: String { return "/MobileBankIdAuthenticationService/InitiateBankIdAuthentication" }
}

public protocol MobileBankIdAuthenticationServiceCollectBankIdAuthenticationCall: ClientCallUnary {}

fileprivate final class MobileBankIdAuthenticationServiceCollectBankIdAuthenticationCallBase: ClientCallUnaryBase<CollectBankIdAuthenticationRequest, CollectBankIdAuthenticationResponse>, MobileBankIdAuthenticationServiceCollectBankIdAuthenticationCall {
  override class var method: String { return "/MobileBankIdAuthenticationService/CollectBankIdAuthentication" }
}


/// Instantiate MobileBankIdAuthenticationServiceServiceClient, then call methods of this protocol to make API calls.
public protocol MobileBankIdAuthenticationServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func initiateBankIdAuthentication(_ request: InitiateBankIdAuthenticationRequest, metadata customMetadata: Metadata, completion: @escaping (InitiateBankIdAuthenticationResponse?, CallResult) -> Void) throws -> MobileBankIdAuthenticationServiceInitiateBankIdAuthenticationCall

  /// Asynchronous. Unary.
  @discardableResult
  func collectBankIdAuthentication(_ request: CollectBankIdAuthenticationRequest, metadata customMetadata: Metadata, completion: @escaping (CollectBankIdAuthenticationResponse?, CallResult) -> Void) throws -> MobileBankIdAuthenticationServiceCollectBankIdAuthenticationCall

}

public extension MobileBankIdAuthenticationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func initiateBankIdAuthentication(_ request: InitiateBankIdAuthenticationRequest, completion: @escaping (InitiateBankIdAuthenticationResponse?, CallResult) -> Void) throws -> MobileBankIdAuthenticationServiceInitiateBankIdAuthenticationCall {
    return try self.initiateBankIdAuthentication(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func collectBankIdAuthentication(_ request: CollectBankIdAuthenticationRequest, completion: @escaping (CollectBankIdAuthenticationResponse?, CallResult) -> Void) throws -> MobileBankIdAuthenticationServiceCollectBankIdAuthenticationCall {
    return try self.collectBankIdAuthentication(request, metadata: self.metadata, completion: completion)
  }

}

public final class MobileBankIdAuthenticationServiceServiceClient: ServiceClientBase, MobileBankIdAuthenticationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func initiateBankIdAuthentication(_ request: InitiateBankIdAuthenticationRequest, metadata customMetadata: Metadata, completion: @escaping (InitiateBankIdAuthenticationResponse?, CallResult) -> Void) throws -> MobileBankIdAuthenticationServiceInitiateBankIdAuthenticationCall {
    return try MobileBankIdAuthenticationServiceInitiateBankIdAuthenticationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func collectBankIdAuthentication(_ request: CollectBankIdAuthenticationRequest, metadata customMetadata: Metadata, completion: @escaping (CollectBankIdAuthenticationResponse?, CallResult) -> Void) throws -> MobileBankIdAuthenticationServiceCollectBankIdAuthenticationCall {
    return try MobileBankIdAuthenticationServiceCollectBankIdAuthenticationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol PhoneNumberAndPin6AuthenticationServiceSmsOtpAndPin6AuthenticationCall: ClientCallUnary {}

fileprivate final class PhoneNumberAndPin6AuthenticationServiceSmsOtpAndPin6AuthenticationCallBase: ClientCallUnaryBase<SmsOtpAndPin6AuthenticationRequest, SmsOtpAndPin6AuthenticationResponse>, PhoneNumberAndPin6AuthenticationServiceSmsOtpAndPin6AuthenticationCall {
  override class var method: String { return "/PhoneNumberAndPin6AuthenticationService/SmsOtpAndPin6Authentication" }
}

public protocol PhoneNumberAndPin6AuthenticationServicePhoneNumberAndPin6AuthenticationCall: ClientCallUnary {}

fileprivate final class PhoneNumberAndPin6AuthenticationServicePhoneNumberAndPin6AuthenticationCallBase: ClientCallUnaryBase<PhoneNumberAndPin6AuthenticationRequest, PhoneNumberAndPin6AuthenticationResponse>, PhoneNumberAndPin6AuthenticationServicePhoneNumberAndPin6AuthenticationCall {
  override class var method: String { return "/PhoneNumberAndPin6AuthenticationService/PhoneNumberAndPin6Authentication" }
}

public protocol PhoneNumberAndPin6AuthenticationServiceUpdatePin6Call: ClientCallUnary {}

fileprivate final class PhoneNumberAndPin6AuthenticationServiceUpdatePin6CallBase: ClientCallUnaryBase<UpdatePin6Request, UpdatePin6Response>, PhoneNumberAndPin6AuthenticationServiceUpdatePin6Call {
  override class var method: String { return "/PhoneNumberAndPin6AuthenticationService/UpdatePin6" }
}

public protocol PhoneNumberAndPin6AuthenticationServiceUpdatePhoneNumberCall: ClientCallUnary {}

fileprivate final class PhoneNumberAndPin6AuthenticationServiceUpdatePhoneNumberCallBase: ClientCallUnaryBase<UpdatePhoneNumberRequest, UpdatePhoneNumberResponse>, PhoneNumberAndPin6AuthenticationServiceUpdatePhoneNumberCall {
  override class var method: String { return "/PhoneNumberAndPin6AuthenticationService/UpdatePhoneNumber" }
}

public protocol PhoneNumberAndPin6AuthenticationServiceResetPin6Call: ClientCallUnary {}

fileprivate final class PhoneNumberAndPin6AuthenticationServiceResetPin6CallBase: ClientCallUnaryBase<ResetPin6Request, ResetPin6Response>, PhoneNumberAndPin6AuthenticationServiceResetPin6Call {
  override class var method: String { return "/PhoneNumberAndPin6AuthenticationService/ResetPin6" }
}


/// Instantiate PhoneNumberAndPin6AuthenticationServiceServiceClient, then call methods of this protocol to make API calls.
public protocol PhoneNumberAndPin6AuthenticationServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func smsOtpAndPin6Authentication(_ request: SmsOtpAndPin6AuthenticationRequest, metadata customMetadata: Metadata, completion: @escaping (SmsOtpAndPin6AuthenticationResponse?, CallResult) -> Void) throws -> PhoneNumberAndPin6AuthenticationServiceSmsOtpAndPin6AuthenticationCall

  /// Asynchronous. Unary.
  @discardableResult
  func phoneNumberAndPin6Authentication(_ request: PhoneNumberAndPin6AuthenticationRequest, metadata customMetadata: Metadata, completion: @escaping (PhoneNumberAndPin6AuthenticationResponse?, CallResult) -> Void) throws -> PhoneNumberAndPin6AuthenticationServicePhoneNumberAndPin6AuthenticationCall

  /// Asynchronous. Unary.
  @discardableResult
  func updatePin6(_ request: UpdatePin6Request, metadata customMetadata: Metadata, completion: @escaping (UpdatePin6Response?, CallResult) -> Void) throws -> PhoneNumberAndPin6AuthenticationServiceUpdatePin6Call

  /// Asynchronous. Unary.
  @discardableResult
  func updatePhoneNumber(_ request: UpdatePhoneNumberRequest, metadata customMetadata: Metadata, completion: @escaping (UpdatePhoneNumberResponse?, CallResult) -> Void) throws -> PhoneNumberAndPin6AuthenticationServiceUpdatePhoneNumberCall

  /// Asynchronous. Unary.
  @discardableResult
  func resetPin6(_ request: ResetPin6Request, metadata customMetadata: Metadata, completion: @escaping (ResetPin6Response?, CallResult) -> Void) throws -> PhoneNumberAndPin6AuthenticationServiceResetPin6Call

}

public extension PhoneNumberAndPin6AuthenticationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func smsOtpAndPin6Authentication(_ request: SmsOtpAndPin6AuthenticationRequest, completion: @escaping (SmsOtpAndPin6AuthenticationResponse?, CallResult) -> Void) throws -> PhoneNumberAndPin6AuthenticationServiceSmsOtpAndPin6AuthenticationCall {
    return try self.smsOtpAndPin6Authentication(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func phoneNumberAndPin6Authentication(_ request: PhoneNumberAndPin6AuthenticationRequest, completion: @escaping (PhoneNumberAndPin6AuthenticationResponse?, CallResult) -> Void) throws -> PhoneNumberAndPin6AuthenticationServicePhoneNumberAndPin6AuthenticationCall {
    return try self.phoneNumberAndPin6Authentication(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func updatePin6(_ request: UpdatePin6Request, completion: @escaping (UpdatePin6Response?, CallResult) -> Void) throws -> PhoneNumberAndPin6AuthenticationServiceUpdatePin6Call {
    return try self.updatePin6(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func updatePhoneNumber(_ request: UpdatePhoneNumberRequest, completion: @escaping (UpdatePhoneNumberResponse?, CallResult) -> Void) throws -> PhoneNumberAndPin6AuthenticationServiceUpdatePhoneNumberCall {
    return try self.updatePhoneNumber(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func resetPin6(_ request: ResetPin6Request, completion: @escaping (ResetPin6Response?, CallResult) -> Void) throws -> PhoneNumberAndPin6AuthenticationServiceResetPin6Call {
    return try self.resetPin6(request, metadata: self.metadata, completion: completion)
  }

}

public final class PhoneNumberAndPin6AuthenticationServiceServiceClient: ServiceClientBase, PhoneNumberAndPin6AuthenticationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func smsOtpAndPin6Authentication(_ request: SmsOtpAndPin6AuthenticationRequest, metadata customMetadata: Metadata, completion: @escaping (SmsOtpAndPin6AuthenticationResponse?, CallResult) -> Void) throws -> PhoneNumberAndPin6AuthenticationServiceSmsOtpAndPin6AuthenticationCall {
    return try PhoneNumberAndPin6AuthenticationServiceSmsOtpAndPin6AuthenticationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func phoneNumberAndPin6Authentication(_ request: PhoneNumberAndPin6AuthenticationRequest, metadata customMetadata: Metadata, completion: @escaping (PhoneNumberAndPin6AuthenticationResponse?, CallResult) -> Void) throws -> PhoneNumberAndPin6AuthenticationServicePhoneNumberAndPin6AuthenticationCall {
    return try PhoneNumberAndPin6AuthenticationServicePhoneNumberAndPin6AuthenticationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func updatePin6(_ request: UpdatePin6Request, metadata customMetadata: Metadata, completion: @escaping (UpdatePin6Response?, CallResult) -> Void) throws -> PhoneNumberAndPin6AuthenticationServiceUpdatePin6Call {
    return try PhoneNumberAndPin6AuthenticationServiceUpdatePin6CallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func updatePhoneNumber(_ request: UpdatePhoneNumberRequest, metadata customMetadata: Metadata, completion: @escaping (UpdatePhoneNumberResponse?, CallResult) -> Void) throws -> PhoneNumberAndPin6AuthenticationServiceUpdatePhoneNumberCall {
    return try PhoneNumberAndPin6AuthenticationServiceUpdatePhoneNumberCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func resetPin6(_ request: ResetPin6Request, metadata customMetadata: Metadata, completion: @escaping (ResetPin6Response?, CallResult) -> Void) throws -> PhoneNumberAndPin6AuthenticationServiceResetPin6Call {
    return try PhoneNumberAndPin6AuthenticationServiceResetPin6CallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol PhoneNumberAuthenticationServiceInitiateSmsOtpCall: ClientCallUnary {}

fileprivate final class PhoneNumberAuthenticationServiceInitiateSmsOtpCallBase: ClientCallUnaryBase<InitiateSmsOtpRequest, InitiateSmsOtpResponse>, PhoneNumberAuthenticationServiceInitiateSmsOtpCall {
  override class var method: String { return "/PhoneNumberAuthenticationService/InitiateSmsOtp" }
}

public protocol PhoneNumberAuthenticationServiceVerifySmsOtpCall: ClientCallUnary {}

fileprivate final class PhoneNumberAuthenticationServiceVerifySmsOtpCallBase: ClientCallUnaryBase<VerifySmsOtpRequest, VerifySmsOtpResponse>, PhoneNumberAuthenticationServiceVerifySmsOtpCall {
  override class var method: String { return "/PhoneNumberAuthenticationService/VerifySmsOtp" }
}


/// Instantiate PhoneNumberAuthenticationServiceServiceClient, then call methods of this protocol to make API calls.
public protocol PhoneNumberAuthenticationServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func initiateSmsOtp(_ request: InitiateSmsOtpRequest, metadata customMetadata: Metadata, completion: @escaping (InitiateSmsOtpResponse?, CallResult) -> Void) throws -> PhoneNumberAuthenticationServiceInitiateSmsOtpCall

  /// Asynchronous. Unary.
  @discardableResult
  func verifySmsOtp(_ request: VerifySmsOtpRequest, metadata customMetadata: Metadata, completion: @escaping (VerifySmsOtpResponse?, CallResult) -> Void) throws -> PhoneNumberAuthenticationServiceVerifySmsOtpCall

}

public extension PhoneNumberAuthenticationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func initiateSmsOtp(_ request: InitiateSmsOtpRequest, completion: @escaping (InitiateSmsOtpResponse?, CallResult) -> Void) throws -> PhoneNumberAuthenticationServiceInitiateSmsOtpCall {
    return try self.initiateSmsOtp(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func verifySmsOtp(_ request: VerifySmsOtpRequest, completion: @escaping (VerifySmsOtpResponse?, CallResult) -> Void) throws -> PhoneNumberAuthenticationServiceVerifySmsOtpCall {
    return try self.verifySmsOtp(request, metadata: self.metadata, completion: completion)
  }

}

public final class PhoneNumberAuthenticationServiceServiceClient: ServiceClientBase, PhoneNumberAuthenticationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func initiateSmsOtp(_ request: InitiateSmsOtpRequest, metadata customMetadata: Metadata, completion: @escaping (InitiateSmsOtpResponse?, CallResult) -> Void) throws -> PhoneNumberAuthenticationServiceInitiateSmsOtpCall {
    return try PhoneNumberAuthenticationServiceInitiateSmsOtpCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func verifySmsOtp(_ request: VerifySmsOtpRequest, metadata customMetadata: Metadata, completion: @escaping (VerifySmsOtpResponse?, CallResult) -> Void) throws -> PhoneNumberAuthenticationServiceVerifySmsOtpCall {
    return try PhoneNumberAuthenticationServiceVerifySmsOtpCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol PingServicePingCall: ClientCallUnary {}

fileprivate final class PingServicePingCallBase: ClientCallUnaryBase<PingRequest, PingResponse>, PingServicePingCall {
  override class var method: String { return "/PingService/Ping" }
}


/// Instantiate PingServiceServiceClient, then call methods of this protocol to make API calls.
public protocol PingServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func ping(_ request: PingRequest, metadata customMetadata: Metadata, completion: @escaping (PingResponse?, CallResult) -> Void) throws -> PingServicePingCall

}

public extension PingServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func ping(_ request: PingRequest, completion: @escaping (PingResponse?, CallResult) -> Void) throws -> PingServicePingCall {
    return try self.ping(request, metadata: self.metadata, completion: completion)
  }

}

public final class PingServiceServiceClient: ServiceClientBase, PingServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func ping(_ request: PingRequest, metadata customMetadata: Metadata, completion: @escaping (PingResponse?, CallResult) -> Void) throws -> PingServicePingCall {
    return try PingServicePingCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol PropertyServiceListPropertiesCall: ClientCallUnary {}

fileprivate final class PropertyServiceListPropertiesCallBase: ClientCallUnaryBase<ListPropertiesRequest, ListPropertiesResponse>, PropertyServiceListPropertiesCall {
  override class var method: String { return "/PropertyService/ListProperties" }
}

public protocol PropertyServiceGetPropertyCall: ClientCallUnary {}

fileprivate final class PropertyServiceGetPropertyCallBase: ClientCallUnaryBase<GetPropertyRequest, GetPropertyResponse>, PropertyServiceGetPropertyCall {
  override class var method: String { return "/PropertyService/GetProperty" }
}

public protocol PropertyServiceUpdatePropertyCall: ClientCallUnary {}

fileprivate final class PropertyServiceUpdatePropertyCallBase: ClientCallUnaryBase<UpdatePropertyRequest, UpdatePropertyResponse>, PropertyServiceUpdatePropertyCall {
  override class var method: String { return "/PropertyService/UpdateProperty" }
}

public protocol PropertyServiceDeleteValuationCall: ClientCallUnary {}

fileprivate final class PropertyServiceDeleteValuationCallBase: ClientCallUnaryBase<DeleteValuationRequest, DeleteValuationResponse>, PropertyServiceDeleteValuationCall {
  override class var method: String { return "/PropertyService/DeleteValuation" }
}

public protocol PropertyServiceGetValuationEventsCall: ClientCallUnary {}

fileprivate final class PropertyServiceGetValuationEventsCallBase: ClientCallUnaryBase<GetValuationEventsRequest, GetValuationEventsResponse>, PropertyServiceGetValuationEventsCall {
  override class var method: String { return "/PropertyService/GetValuationEvents" }
}

public protocol PropertyServiceGetValuationSummaryCall: ClientCallUnary {}

fileprivate final class PropertyServiceGetValuationSummaryCallBase: ClientCallUnaryBase<GetValuationSummaryRequest, GetValuationSummaryResponse>, PropertyServiceGetValuationSummaryCall {
  override class var method: String { return "/PropertyService/GetValuationSummary" }
}


/// Instantiate PropertyServiceServiceClient, then call methods of this protocol to make API calls.
public protocol PropertyServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func listProperties(_ request: ListPropertiesRequest, metadata customMetadata: Metadata, completion: @escaping (ListPropertiesResponse?, CallResult) -> Void) throws -> PropertyServiceListPropertiesCall

  /// Asynchronous. Unary.
  @discardableResult
  func getProperty(_ request: GetPropertyRequest, metadata customMetadata: Metadata, completion: @escaping (GetPropertyResponse?, CallResult) -> Void) throws -> PropertyServiceGetPropertyCall

  /// Asynchronous. Unary.
  @discardableResult
  func updateProperty(_ request: UpdatePropertyRequest, metadata customMetadata: Metadata, completion: @escaping (UpdatePropertyResponse?, CallResult) -> Void) throws -> PropertyServiceUpdatePropertyCall

  /// Asynchronous. Unary.
  @discardableResult
  func deleteValuation(_ request: DeleteValuationRequest, metadata customMetadata: Metadata, completion: @escaping (DeleteValuationResponse?, CallResult) -> Void) throws -> PropertyServiceDeleteValuationCall

  /// Asynchronous. Unary.
  @discardableResult
  func getValuationEvents(_ request: GetValuationEventsRequest, metadata customMetadata: Metadata, completion: @escaping (GetValuationEventsResponse?, CallResult) -> Void) throws -> PropertyServiceGetValuationEventsCall

  /// Asynchronous. Unary.
  @discardableResult
  func getValuationSummary(_ request: GetValuationSummaryRequest, metadata customMetadata: Metadata, completion: @escaping (GetValuationSummaryResponse?, CallResult) -> Void) throws -> PropertyServiceGetValuationSummaryCall

}

public extension PropertyServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func listProperties(_ request: ListPropertiesRequest, completion: @escaping (ListPropertiesResponse?, CallResult) -> Void) throws -> PropertyServiceListPropertiesCall {
    return try self.listProperties(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getProperty(_ request: GetPropertyRequest, completion: @escaping (GetPropertyResponse?, CallResult) -> Void) throws -> PropertyServiceGetPropertyCall {
    return try self.getProperty(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func updateProperty(_ request: UpdatePropertyRequest, completion: @escaping (UpdatePropertyResponse?, CallResult) -> Void) throws -> PropertyServiceUpdatePropertyCall {
    return try self.updateProperty(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func deleteValuation(_ request: DeleteValuationRequest, completion: @escaping (DeleteValuationResponse?, CallResult) -> Void) throws -> PropertyServiceDeleteValuationCall {
    return try self.deleteValuation(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getValuationEvents(_ request: GetValuationEventsRequest, completion: @escaping (GetValuationEventsResponse?, CallResult) -> Void) throws -> PropertyServiceGetValuationEventsCall {
    return try self.getValuationEvents(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getValuationSummary(_ request: GetValuationSummaryRequest, completion: @escaping (GetValuationSummaryResponse?, CallResult) -> Void) throws -> PropertyServiceGetValuationSummaryCall {
    return try self.getValuationSummary(request, metadata: self.metadata, completion: completion)
  }

}

public final class PropertyServiceServiceClient: ServiceClientBase, PropertyServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func listProperties(_ request: ListPropertiesRequest, metadata customMetadata: Metadata, completion: @escaping (ListPropertiesResponse?, CallResult) -> Void) throws -> PropertyServiceListPropertiesCall {
    return try PropertyServiceListPropertiesCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getProperty(_ request: GetPropertyRequest, metadata customMetadata: Metadata, completion: @escaping (GetPropertyResponse?, CallResult) -> Void) throws -> PropertyServiceGetPropertyCall {
    return try PropertyServiceGetPropertyCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func updateProperty(_ request: UpdatePropertyRequest, metadata customMetadata: Metadata, completion: @escaping (UpdatePropertyResponse?, CallResult) -> Void) throws -> PropertyServiceUpdatePropertyCall {
    return try PropertyServiceUpdatePropertyCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func deleteValuation(_ request: DeleteValuationRequest, metadata customMetadata: Metadata, completion: @escaping (DeleteValuationResponse?, CallResult) -> Void) throws -> PropertyServiceDeleteValuationCall {
    return try PropertyServiceDeleteValuationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getValuationEvents(_ request: GetValuationEventsRequest, metadata customMetadata: Metadata, completion: @escaping (GetValuationEventsResponse?, CallResult) -> Void) throws -> PropertyServiceGetValuationEventsCall {
    return try PropertyServiceGetValuationEventsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getValuationSummary(_ request: GetValuationSummaryRequest, metadata customMetadata: Metadata, completion: @escaping (GetValuationSummaryResponse?, CallResult) -> Void) throws -> PropertyServiceGetValuationSummaryCall {
    return try PropertyServiceGetValuationSummaryCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol MarketServiceListMarketsCall: ClientCallUnary {}

fileprivate final class MarketServiceListMarketsCallBase: ClientCallUnaryBase<ListMarketsRequest, ListMarketsResponse>, MarketServiceListMarketsCall {
  override class var method: String { return "/MarketService/ListMarkets" }
}


/// Instantiate MarketServiceServiceClient, then call methods of this protocol to make API calls.
public protocol MarketServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func listMarkets(_ request: ListMarketsRequest, metadata customMetadata: Metadata, completion: @escaping (ListMarketsResponse?, CallResult) -> Void) throws -> MarketServiceListMarketsCall

}

public extension MarketServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func listMarkets(_ request: ListMarketsRequest, completion: @escaping (ListMarketsResponse?, CallResult) -> Void) throws -> MarketServiceListMarketsCall {
    return try self.listMarkets(request, metadata: self.metadata, completion: completion)
  }

}

public final class MarketServiceServiceClient: ServiceClientBase, MarketServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func listMarkets(_ request: ListMarketsRequest, metadata customMetadata: Metadata, completion: @escaping (ListMarketsResponse?, CallResult) -> Void) throws -> MarketServiceListMarketsCall {
    return try MarketServiceListMarketsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol ProviderServiceListProvidersCall: ClientCallUnary {}

fileprivate final class ProviderServiceListProvidersCallBase: ClientCallUnaryBase<ProviderListRequest, ListProvidersResponse>, ProviderServiceListProvidersCall {
  override class var method: String { return "/ProviderService/ListProviders" }
}

public protocol ProviderServiceListProvidersForMarketsCall: ClientCallUnary {}

fileprivate final class ProviderServiceListProvidersForMarketsCallBase: ClientCallUnaryBase<ProviderListForMarketsRequest, ListProvidersForMarketsResponse>, ProviderServiceListProvidersForMarketsCall {
  override class var method: String { return "/ProviderService/ListProvidersForMarkets" }
}

public protocol ProviderServiceListProviderMarketsCall: ClientCallUnary {}

fileprivate final class ProviderServiceListProviderMarketsCallBase: ClientCallUnaryBase<ProviderMarketListRequest, ProviderMarketListResponse>, ProviderServiceListProviderMarketsCall {
  override class var method: String { return "/ProviderService/ListProviderMarkets" }
}

public protocol ProviderServiceSuggestCall: ClientCallUnary {}

fileprivate final class ProviderServiceSuggestCallBase: ClientCallUnaryBase<ProviderSuggestRequest, ListProvidersResponse>, ProviderServiceSuggestCall {
  override class var method: String { return "/ProviderService/Suggest" }
}


/// Instantiate ProviderServiceServiceClient, then call methods of this protocol to make API calls.
public protocol ProviderServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func listProviders(_ request: ProviderListRequest, metadata customMetadata: Metadata, completion: @escaping (ListProvidersResponse?, CallResult) -> Void) throws -> ProviderServiceListProvidersCall

  /// Asynchronous. Unary.
  @discardableResult
  func listProvidersForMarkets(_ request: ProviderListForMarketsRequest, metadata customMetadata: Metadata, completion: @escaping (ListProvidersForMarketsResponse?, CallResult) -> Void) throws -> ProviderServiceListProvidersForMarketsCall

  /// Asynchronous. Unary.
  @discardableResult
  func listProviderMarkets(_ request: ProviderMarketListRequest, metadata customMetadata: Metadata, completion: @escaping (ProviderMarketListResponse?, CallResult) -> Void) throws -> ProviderServiceListProviderMarketsCall

  /// Asynchronous. Unary.
  @discardableResult
  func suggest(_ request: ProviderSuggestRequest, metadata customMetadata: Metadata, completion: @escaping (ListProvidersResponse?, CallResult) -> Void) throws -> ProviderServiceSuggestCall

}

public extension ProviderServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func listProviders(_ request: ProviderListRequest, completion: @escaping (ListProvidersResponse?, CallResult) -> Void) throws -> ProviderServiceListProvidersCall {
    return try self.listProviders(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func listProvidersForMarkets(_ request: ProviderListForMarketsRequest, completion: @escaping (ListProvidersForMarketsResponse?, CallResult) -> Void) throws -> ProviderServiceListProvidersForMarketsCall {
    return try self.listProvidersForMarkets(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func listProviderMarkets(_ request: ProviderMarketListRequest, completion: @escaping (ProviderMarketListResponse?, CallResult) -> Void) throws -> ProviderServiceListProviderMarketsCall {
    return try self.listProviderMarkets(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func suggest(_ request: ProviderSuggestRequest, completion: @escaping (ListProvidersResponse?, CallResult) -> Void) throws -> ProviderServiceSuggestCall {
    return try self.suggest(request, metadata: self.metadata, completion: completion)
  }

}

public final class ProviderServiceServiceClient: ServiceClientBase, ProviderServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func listProviders(_ request: ProviderListRequest, metadata customMetadata: Metadata, completion: @escaping (ListProvidersResponse?, CallResult) -> Void) throws -> ProviderServiceListProvidersCall {
    return try ProviderServiceListProvidersCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func listProvidersForMarkets(_ request: ProviderListForMarketsRequest, metadata customMetadata: Metadata, completion: @escaping (ListProvidersForMarketsResponse?, CallResult) -> Void) throws -> ProviderServiceListProvidersForMarketsCall {
    return try ProviderServiceListProvidersForMarketsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func listProviderMarkets(_ request: ProviderMarketListRequest, metadata customMetadata: Metadata, completion: @escaping (ProviderMarketListResponse?, CallResult) -> Void) throws -> ProviderServiceListProviderMarketsCall {
    return try ProviderServiceListProviderMarketsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func suggest(_ request: ProviderSuggestRequest, metadata customMetadata: Metadata, completion: @escaping (ListProvidersResponse?, CallResult) -> Void) throws -> ProviderServiceSuggestCall {
    return try ProviderServiceSuggestCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol RecurringTransactionsServiceListRecurringTransactionsCall: ClientCallUnary {}

fileprivate final class RecurringTransactionsServiceListRecurringTransactionsCallBase: ClientCallUnaryBase<ListRecurringTransactionsRequest, ListRecurringTransactionsResponse>, RecurringTransactionsServiceListRecurringTransactionsCall {
  override class var method: String { return "/RecurringTransactionsService/ListRecurringTransactions" }
}

public protocol RecurringTransactionsServiceListRecurringTransactionGroupsCall: ClientCallUnary {}

fileprivate final class RecurringTransactionsServiceListRecurringTransactionGroupsCallBase: ClientCallUnaryBase<ListRecurringTransactionGroupsRequest, ListRecurringTransactionGroupsResponse>, RecurringTransactionsServiceListRecurringTransactionGroupsCall {
  override class var method: String { return "/RecurringTransactionsService/ListRecurringTransactionGroups" }
}

public protocol RecurringTransactionsServiceCreateRecurringTransactionGroupCall: ClientCallUnary {}

fileprivate final class RecurringTransactionsServiceCreateRecurringTransactionGroupCallBase: ClientCallUnaryBase<CreateRecurringTransactionGroupRequest, CreateRecurringTransactionGroupResponse>, RecurringTransactionsServiceCreateRecurringTransactionGroupCall {
  override class var method: String { return "/RecurringTransactionsService/CreateRecurringTransactionGroup" }
}

public protocol RecurringTransactionsServiceExcludeRecurringTransactionFromGroupCall: ClientCallUnary {}

fileprivate final class RecurringTransactionsServiceExcludeRecurringTransactionFromGroupCallBase: ClientCallUnaryBase<ExcludeRecurringTransactionFromGroupRequest, ExcludeRecurringTransactionFromGroupResponse>, RecurringTransactionsServiceExcludeRecurringTransactionFromGroupCall {
  override class var method: String { return "/RecurringTransactionsService/ExcludeRecurringTransactionFromGroup" }
}

public protocol RecurringTransactionsServiceIncludeRecurringTransactionInGroupCall: ClientCallUnary {}

fileprivate final class RecurringTransactionsServiceIncludeRecurringTransactionInGroupCallBase: ClientCallUnaryBase<IncludeRecurringTransactionInGroupRequest, IncludeRecurringTransactionInGroupResponse>, RecurringTransactionsServiceIncludeRecurringTransactionInGroupCall {
  override class var method: String { return "/RecurringTransactionsService/IncludeRecurringTransactionInGroup" }
}

public protocol RecurringTransactionsServiceDisableRecurringTransactionGroupCall: ClientCallUnary {}

fileprivate final class RecurringTransactionsServiceDisableRecurringTransactionGroupCallBase: ClientCallUnaryBase<DisableRecurringTransactionGroupRequest, DisableRecurringTransactionGroupResponse>, RecurringTransactionsServiceDisableRecurringTransactionGroupCall {
  override class var method: String { return "/RecurringTransactionsService/DisableRecurringTransactionGroup" }
}

public protocol RecurringTransactionsServiceActivateRecurringTransactionGroupCall: ClientCallUnary {}

fileprivate final class RecurringTransactionsServiceActivateRecurringTransactionGroupCallBase: ClientCallUnaryBase<ActivateRecurringTransactionGroupRequest, ActivateRecurringTransactionGroupResponse>, RecurringTransactionsServiceActivateRecurringTransactionGroupCall {
  override class var method: String { return "/RecurringTransactionsService/ActivateRecurringTransactionGroup" }
}

public protocol RecurringTransactionsServiceUpdateRecurringTransactionGroupCall: ClientCallUnary {}

fileprivate final class RecurringTransactionsServiceUpdateRecurringTransactionGroupCallBase: ClientCallUnaryBase<UpdateRecurringTransactionGroupRequest, UpdateRecurringTransactionGroupResponse>, RecurringTransactionsServiceUpdateRecurringTransactionGroupCall {
  override class var method: String { return "/RecurringTransactionsService/UpdateRecurringTransactionGroup" }
}

public protocol RecurringTransactionsServiceListRecurringTransactionPeriodSummariesCall: ClientCallUnary {}

fileprivate final class RecurringTransactionsServiceListRecurringTransactionPeriodSummariesCallBase: ClientCallUnaryBase<ListRecurringTransactionPeriodSummariesRequest, ListRecurringTransactionPeriodSummariesResponse>, RecurringTransactionsServiceListRecurringTransactionPeriodSummariesCall {
  override class var method: String { return "/RecurringTransactionsService/ListRecurringTransactionPeriodSummaries" }
}


/// Instantiate RecurringTransactionsServiceServiceClient, then call methods of this protocol to make API calls.
public protocol RecurringTransactionsServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func listRecurringTransactions(_ request: ListRecurringTransactionsRequest, metadata customMetadata: Metadata, completion: @escaping (ListRecurringTransactionsResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceListRecurringTransactionsCall

  /// Asynchronous. Unary.
  @discardableResult
  func listRecurringTransactionGroups(_ request: ListRecurringTransactionGroupsRequest, metadata customMetadata: Metadata, completion: @escaping (ListRecurringTransactionGroupsResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceListRecurringTransactionGroupsCall

  /// Asynchronous. Unary.
  @discardableResult
  func createRecurringTransactionGroup(_ request: CreateRecurringTransactionGroupRequest, metadata customMetadata: Metadata, completion: @escaping (CreateRecurringTransactionGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceCreateRecurringTransactionGroupCall

  /// Asynchronous. Unary.
  @discardableResult
  func excludeRecurringTransactionFromGroup(_ request: ExcludeRecurringTransactionFromGroupRequest, metadata customMetadata: Metadata, completion: @escaping (ExcludeRecurringTransactionFromGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceExcludeRecurringTransactionFromGroupCall

  /// Asynchronous. Unary.
  @discardableResult
  func includeRecurringTransactionInGroup(_ request: IncludeRecurringTransactionInGroupRequest, metadata customMetadata: Metadata, completion: @escaping (IncludeRecurringTransactionInGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceIncludeRecurringTransactionInGroupCall

  /// Asynchronous. Unary.
  @discardableResult
  func disableRecurringTransactionGroup(_ request: DisableRecurringTransactionGroupRequest, metadata customMetadata: Metadata, completion: @escaping (DisableRecurringTransactionGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceDisableRecurringTransactionGroupCall

  /// Asynchronous. Unary.
  @discardableResult
  func activateRecurringTransactionGroup(_ request: ActivateRecurringTransactionGroupRequest, metadata customMetadata: Metadata, completion: @escaping (ActivateRecurringTransactionGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceActivateRecurringTransactionGroupCall

  /// Asynchronous. Unary.
  @discardableResult
  func updateRecurringTransactionGroup(_ request: UpdateRecurringTransactionGroupRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateRecurringTransactionGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceUpdateRecurringTransactionGroupCall

  /// Asynchronous. Unary.
  @discardableResult
  func listRecurringTransactionPeriodSummaries(_ request: ListRecurringTransactionPeriodSummariesRequest, metadata customMetadata: Metadata, completion: @escaping (ListRecurringTransactionPeriodSummariesResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceListRecurringTransactionPeriodSummariesCall

}

public extension RecurringTransactionsServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func listRecurringTransactions(_ request: ListRecurringTransactionsRequest, completion: @escaping (ListRecurringTransactionsResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceListRecurringTransactionsCall {
    return try self.listRecurringTransactions(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func listRecurringTransactionGroups(_ request: ListRecurringTransactionGroupsRequest, completion: @escaping (ListRecurringTransactionGroupsResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceListRecurringTransactionGroupsCall {
    return try self.listRecurringTransactionGroups(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func createRecurringTransactionGroup(_ request: CreateRecurringTransactionGroupRequest, completion: @escaping (CreateRecurringTransactionGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceCreateRecurringTransactionGroupCall {
    return try self.createRecurringTransactionGroup(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func excludeRecurringTransactionFromGroup(_ request: ExcludeRecurringTransactionFromGroupRequest, completion: @escaping (ExcludeRecurringTransactionFromGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceExcludeRecurringTransactionFromGroupCall {
    return try self.excludeRecurringTransactionFromGroup(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func includeRecurringTransactionInGroup(_ request: IncludeRecurringTransactionInGroupRequest, completion: @escaping (IncludeRecurringTransactionInGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceIncludeRecurringTransactionInGroupCall {
    return try self.includeRecurringTransactionInGroup(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func disableRecurringTransactionGroup(_ request: DisableRecurringTransactionGroupRequest, completion: @escaping (DisableRecurringTransactionGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceDisableRecurringTransactionGroupCall {
    return try self.disableRecurringTransactionGroup(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func activateRecurringTransactionGroup(_ request: ActivateRecurringTransactionGroupRequest, completion: @escaping (ActivateRecurringTransactionGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceActivateRecurringTransactionGroupCall {
    return try self.activateRecurringTransactionGroup(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func updateRecurringTransactionGroup(_ request: UpdateRecurringTransactionGroupRequest, completion: @escaping (UpdateRecurringTransactionGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceUpdateRecurringTransactionGroupCall {
    return try self.updateRecurringTransactionGroup(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func listRecurringTransactionPeriodSummaries(_ request: ListRecurringTransactionPeriodSummariesRequest, completion: @escaping (ListRecurringTransactionPeriodSummariesResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceListRecurringTransactionPeriodSummariesCall {
    return try self.listRecurringTransactionPeriodSummaries(request, metadata: self.metadata, completion: completion)
  }

}

public final class RecurringTransactionsServiceServiceClient: ServiceClientBase, RecurringTransactionsServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func listRecurringTransactions(_ request: ListRecurringTransactionsRequest, metadata customMetadata: Metadata, completion: @escaping (ListRecurringTransactionsResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceListRecurringTransactionsCall {
    return try RecurringTransactionsServiceListRecurringTransactionsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func listRecurringTransactionGroups(_ request: ListRecurringTransactionGroupsRequest, metadata customMetadata: Metadata, completion: @escaping (ListRecurringTransactionGroupsResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceListRecurringTransactionGroupsCall {
    return try RecurringTransactionsServiceListRecurringTransactionGroupsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func createRecurringTransactionGroup(_ request: CreateRecurringTransactionGroupRequest, metadata customMetadata: Metadata, completion: @escaping (CreateRecurringTransactionGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceCreateRecurringTransactionGroupCall {
    return try RecurringTransactionsServiceCreateRecurringTransactionGroupCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func excludeRecurringTransactionFromGroup(_ request: ExcludeRecurringTransactionFromGroupRequest, metadata customMetadata: Metadata, completion: @escaping (ExcludeRecurringTransactionFromGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceExcludeRecurringTransactionFromGroupCall {
    return try RecurringTransactionsServiceExcludeRecurringTransactionFromGroupCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func includeRecurringTransactionInGroup(_ request: IncludeRecurringTransactionInGroupRequest, metadata customMetadata: Metadata, completion: @escaping (IncludeRecurringTransactionInGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceIncludeRecurringTransactionInGroupCall {
    return try RecurringTransactionsServiceIncludeRecurringTransactionInGroupCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func disableRecurringTransactionGroup(_ request: DisableRecurringTransactionGroupRequest, metadata customMetadata: Metadata, completion: @escaping (DisableRecurringTransactionGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceDisableRecurringTransactionGroupCall {
    return try RecurringTransactionsServiceDisableRecurringTransactionGroupCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func activateRecurringTransactionGroup(_ request: ActivateRecurringTransactionGroupRequest, metadata customMetadata: Metadata, completion: @escaping (ActivateRecurringTransactionGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceActivateRecurringTransactionGroupCall {
    return try RecurringTransactionsServiceActivateRecurringTransactionGroupCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func updateRecurringTransactionGroup(_ request: UpdateRecurringTransactionGroupRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateRecurringTransactionGroupResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceUpdateRecurringTransactionGroupCall {
    return try RecurringTransactionsServiceUpdateRecurringTransactionGroupCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func listRecurringTransactionPeriodSummaries(_ request: ListRecurringTransactionPeriodSummariesRequest, metadata customMetadata: Metadata, completion: @escaping (ListRecurringTransactionPeriodSummariesResponse?, CallResult) -> Void) throws -> RecurringTransactionsServiceListRecurringTransactionPeriodSummariesCall {
    return try RecurringTransactionsServiceListRecurringTransactionPeriodSummariesCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol SettingsServiceGetNotificationSettingsCall: ClientCallUnary {}

fileprivate final class SettingsServiceGetNotificationSettingsCallBase: ClientCallUnaryBase<NotificationSettingsRequest, NotificationSettingsResponse>, SettingsServiceGetNotificationSettingsCall {
  override class var method: String { return "/SettingsService/GetNotificationSettings" }
}

public protocol SettingsServiceUpdateNotificationSettingsCall: ClientCallUnary {}

fileprivate final class SettingsServiceUpdateNotificationSettingsCallBase: ClientCallUnaryBase<UpdateNotificationSettingsRequest, NotificationSettingsResponse>, SettingsServiceUpdateNotificationSettingsCall {
  override class var method: String { return "/SettingsService/UpdateNotificationSettings" }
}

public protocol SettingsServiceGetPeriodSettingsCall: ClientCallUnary {}

fileprivate final class SettingsServiceGetPeriodSettingsCallBase: ClientCallUnaryBase<PeriodSettingsRequest, PeriodSettingsResponse>, SettingsServiceGetPeriodSettingsCall {
  override class var method: String { return "/SettingsService/GetPeriodSettings" }
}

public protocol SettingsServiceUpdatePeriodSettingsCall: ClientCallUnary {}

fileprivate final class SettingsServiceUpdatePeriodSettingsCallBase: ClientCallUnaryBase<UpdatePeriodSettingsRequest, PeriodSettingsResponse>, SettingsServiceUpdatePeriodSettingsCall {
  override class var method: String { return "/SettingsService/UpdatePeriodSettings" }
}

public protocol SettingsServiceUpdateI18NSettingsCall: ClientCallUnary {}

fileprivate final class SettingsServiceUpdateI18NSettingsCallBase: ClientCallUnaryBase<UpdateI18NSettingsRequest, UpdateI18NSettingsResponse>, SettingsServiceUpdateI18NSettingsCall {
  override class var method: String { return "/SettingsService/UpdateI18NSettings" }
}


/// Instantiate SettingsServiceServiceClient, then call methods of this protocol to make API calls.
public protocol SettingsServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func getNotificationSettings(_ request: NotificationSettingsRequest, metadata customMetadata: Metadata, completion: @escaping (NotificationSettingsResponse?, CallResult) -> Void) throws -> SettingsServiceGetNotificationSettingsCall

  /// Asynchronous. Unary.
  @discardableResult
  func updateNotificationSettings(_ request: UpdateNotificationSettingsRequest, metadata customMetadata: Metadata, completion: @escaping (NotificationSettingsResponse?, CallResult) -> Void) throws -> SettingsServiceUpdateNotificationSettingsCall

  /// Asynchronous. Unary.
  @discardableResult
  func getPeriodSettings(_ request: PeriodSettingsRequest, metadata customMetadata: Metadata, completion: @escaping (PeriodSettingsResponse?, CallResult) -> Void) throws -> SettingsServiceGetPeriodSettingsCall

  /// Asynchronous. Unary.
  @discardableResult
  func updatePeriodSettings(_ request: UpdatePeriodSettingsRequest, metadata customMetadata: Metadata, completion: @escaping (PeriodSettingsResponse?, CallResult) -> Void) throws -> SettingsServiceUpdatePeriodSettingsCall

  /// Asynchronous. Unary.
  @discardableResult
  func updateI18NSettings(_ request: UpdateI18NSettingsRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateI18NSettingsResponse?, CallResult) -> Void) throws -> SettingsServiceUpdateI18NSettingsCall

}

public extension SettingsServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func getNotificationSettings(_ request: NotificationSettingsRequest, completion: @escaping (NotificationSettingsResponse?, CallResult) -> Void) throws -> SettingsServiceGetNotificationSettingsCall {
    return try self.getNotificationSettings(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func updateNotificationSettings(_ request: UpdateNotificationSettingsRequest, completion: @escaping (NotificationSettingsResponse?, CallResult) -> Void) throws -> SettingsServiceUpdateNotificationSettingsCall {
    return try self.updateNotificationSettings(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getPeriodSettings(_ request: PeriodSettingsRequest, completion: @escaping (PeriodSettingsResponse?, CallResult) -> Void) throws -> SettingsServiceGetPeriodSettingsCall {
    return try self.getPeriodSettings(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func updatePeriodSettings(_ request: UpdatePeriodSettingsRequest, completion: @escaping (PeriodSettingsResponse?, CallResult) -> Void) throws -> SettingsServiceUpdatePeriodSettingsCall {
    return try self.updatePeriodSettings(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func updateI18NSettings(_ request: UpdateI18NSettingsRequest, completion: @escaping (UpdateI18NSettingsResponse?, CallResult) -> Void) throws -> SettingsServiceUpdateI18NSettingsCall {
    return try self.updateI18NSettings(request, metadata: self.metadata, completion: completion)
  }

}

public final class SettingsServiceServiceClient: ServiceClientBase, SettingsServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func getNotificationSettings(_ request: NotificationSettingsRequest, metadata customMetadata: Metadata, completion: @escaping (NotificationSettingsResponse?, CallResult) -> Void) throws -> SettingsServiceGetNotificationSettingsCall {
    return try SettingsServiceGetNotificationSettingsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func updateNotificationSettings(_ request: UpdateNotificationSettingsRequest, metadata customMetadata: Metadata, completion: @escaping (NotificationSettingsResponse?, CallResult) -> Void) throws -> SettingsServiceUpdateNotificationSettingsCall {
    return try SettingsServiceUpdateNotificationSettingsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getPeriodSettings(_ request: PeriodSettingsRequest, metadata customMetadata: Metadata, completion: @escaping (PeriodSettingsResponse?, CallResult) -> Void) throws -> SettingsServiceGetPeriodSettingsCall {
    return try SettingsServiceGetPeriodSettingsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func updatePeriodSettings(_ request: UpdatePeriodSettingsRequest, metadata customMetadata: Metadata, completion: @escaping (PeriodSettingsResponse?, CallResult) -> Void) throws -> SettingsServiceUpdatePeriodSettingsCall {
    return try SettingsServiceUpdatePeriodSettingsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func updateI18NSettings(_ request: UpdateI18NSettingsRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateI18NSettingsResponse?, CallResult) -> Void) throws -> SettingsServiceUpdateI18NSettingsCall {
    return try SettingsServiceUpdateI18NSettingsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol StatisticServiceQueryStatisticsCall: ClientCallUnary {}

fileprivate final class StatisticServiceQueryStatisticsCallBase: ClientCallUnaryBase<QueryStatisticsRequest, QueryStatisticsResponse>, StatisticServiceQueryStatisticsCall {
  override class var method: String { return "/StatisticService/QueryStatistics" }
}

public protocol StatisticServiceGetInsightsCall: ClientCallUnary {}

fileprivate final class StatisticServiceGetInsightsCallBase: ClientCallUnaryBase<GetInsightsRequest, InsightsResponse>, StatisticServiceGetInsightsCall {
  override class var method: String { return "/StatisticService/GetInsights" }
}

public protocol StatisticServiceGetStatisticsCall: ClientCallUnary {}

fileprivate final class StatisticServiceGetStatisticsCallBase: ClientCallUnaryBase<GetStatisticsRequest, StatisticsResponse>, StatisticServiceGetStatisticsCall {
  override class var method: String { return "/StatisticService/GetStatistics" }
}


/// Instantiate StatisticServiceServiceClient, then call methods of this protocol to make API calls.
public protocol StatisticServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func queryStatistics(_ request: QueryStatisticsRequest, metadata customMetadata: Metadata, completion: @escaping (QueryStatisticsResponse?, CallResult) -> Void) throws -> StatisticServiceQueryStatisticsCall

  /// Asynchronous. Unary.
  @discardableResult
  func getInsights(_ request: GetInsightsRequest, metadata customMetadata: Metadata, completion: @escaping (InsightsResponse?, CallResult) -> Void) throws -> StatisticServiceGetInsightsCall

  /// Asynchronous. Unary.
  @discardableResult
  func getStatistics(_ request: GetStatisticsRequest, metadata customMetadata: Metadata, completion: @escaping (StatisticsResponse?, CallResult) -> Void) throws -> StatisticServiceGetStatisticsCall

}

public extension StatisticServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func queryStatistics(_ request: QueryStatisticsRequest, completion: @escaping (QueryStatisticsResponse?, CallResult) -> Void) throws -> StatisticServiceQueryStatisticsCall {
    return try self.queryStatistics(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getInsights(_ request: GetInsightsRequest, completion: @escaping (InsightsResponse?, CallResult) -> Void) throws -> StatisticServiceGetInsightsCall {
    return try self.getInsights(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getStatistics(_ request: GetStatisticsRequest, completion: @escaping (StatisticsResponse?, CallResult) -> Void) throws -> StatisticServiceGetStatisticsCall {
    return try self.getStatistics(request, metadata: self.metadata, completion: completion)
  }

}

public final class StatisticServiceServiceClient: ServiceClientBase, StatisticServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func queryStatistics(_ request: QueryStatisticsRequest, metadata customMetadata: Metadata, completion: @escaping (QueryStatisticsResponse?, CallResult) -> Void) throws -> StatisticServiceQueryStatisticsCall {
    return try StatisticServiceQueryStatisticsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getInsights(_ request: GetInsightsRequest, metadata customMetadata: Metadata, completion: @escaping (InsightsResponse?, CallResult) -> Void) throws -> StatisticServiceGetInsightsCall {
    return try StatisticServiceGetInsightsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getStatistics(_ request: GetStatisticsRequest, metadata customMetadata: Metadata, completion: @escaping (StatisticsResponse?, CallResult) -> Void) throws -> StatisticServiceGetStatisticsCall {
    return try StatisticServiceGetStatisticsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol StreamingServiceStreamCall: ClientCallBidirectionalStreaming {
  /// Do not call this directly, call `receive()` in the protocol extension below instead.
  func _receive(timeout: DispatchTime) throws -> StreamingResponse?
  /// Call this to wait for a result. Nonblocking.
  func receive(completion: @escaping (ResultOrRPCError<StreamingResponse?>) -> Void) throws

  /// Send a message to the stream. Nonblocking.
  func send(_ message: StreamingRequest, completion: @escaping (Error?) -> Void) throws
  /// Do not call this directly, call `send()` in the protocol extension below instead.
  func _send(_ message: StreamingRequest, timeout: DispatchTime) throws

  /// Call this to close the sending connection. Blocking.
  func closeSend() throws
  /// Call this to close the sending connection. Nonblocking.
  func closeSend(completion: (() -> Void)?) throws
}

public extension StreamingServiceStreamCall {
  /// Call this to wait for a result. Blocking.
  func receive(timeout: DispatchTime = .distantFuture) throws -> StreamingResponse? { return try self._receive(timeout: timeout) }
}

public extension StreamingServiceStreamCall {
  /// Send a message to the stream and wait for the send operation to finish. Blocking.
  func send(_ message: StreamingRequest, timeout: DispatchTime = .distantFuture) throws { try self._send(message, timeout: timeout) }
}

fileprivate final class StreamingServiceStreamCallBase: ClientCallBidirectionalStreamingBase<StreamingRequest, StreamingResponse>, StreamingServiceStreamCall {
  override class var method: String { return "/StreamingService/Stream" }
}


/// Instantiate StreamingServiceServiceClient, then call methods of this protocol to make API calls.
public protocol StreamingServiceService: ServiceClient {
  /// Asynchronous. Bidirectional-streaming.
  /// Use methods on the returned object to stream messages,
  /// to wait for replies, and to close the connection.
  func stream(metadata customMetadata: Metadata, completion: ((CallResult) -> Void)?) throws -> StreamingServiceStreamCall

}

public extension StreamingServiceService {
  /// Asynchronous. Bidirectional-streaming.
  func stream(completion: ((CallResult) -> Void)?) throws -> StreamingServiceStreamCall {
    return try self.stream(metadata: self.metadata, completion: completion)
  }

}

public final class StreamingServiceServiceClient: ServiceClientBase, StreamingServiceService {
  /// Asynchronous. Bidirectional-streaming.
  /// Use methods on the returned object to stream messages,
  /// to wait for replies, and to close the connection.
  public func stream(metadata customMetadata: Metadata, completion: ((CallResult) -> Void)?) throws -> StreamingServiceStreamCall {
    return try StreamingServiceStreamCallBase(channel)
      .start(metadata: customMetadata, completion: completion)
  }

}
public protocol TrackingServiceGetTrackingConfigurationCall: ClientCallUnary {}

fileprivate final class TrackingServiceGetTrackingConfigurationCallBase: ClientCallUnaryBase<GetTrackingConfigurationRequest, GetTrackingConfigurationResponse>, TrackingServiceGetTrackingConfigurationCall {
  override class var method: String { return "/TrackingService/GetTrackingConfiguration" }
}

public protocol TrackingServiceCreateSessionCall: ClientCallUnary {}

fileprivate final class TrackingServiceCreateSessionCallBase: ClientCallUnaryBase<TrackingSessionRequest, TrackingSessionResponse>, TrackingServiceCreateSessionCall {
  override class var method: String { return "/TrackingService/CreateSession" }
}

public protocol TrackingServiceTrackDataCall: ClientCallUnary {}

fileprivate final class TrackingServiceTrackDataCallBase: ClientCallUnaryBase<TrackingRequest, TrackingResponse>, TrackingServiceTrackDataCall {
  override class var method: String { return "/TrackingService/TrackData" }
}


/// Instantiate TrackingServiceServiceClient, then call methods of this protocol to make API calls.
public protocol TrackingServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func getTrackingConfiguration(_ request: GetTrackingConfigurationRequest, metadata customMetadata: Metadata, completion: @escaping (GetTrackingConfigurationResponse?, CallResult) -> Void) throws -> TrackingServiceGetTrackingConfigurationCall

  /// Asynchronous. Unary.
  @discardableResult
  func createSession(_ request: TrackingSessionRequest, metadata customMetadata: Metadata, completion: @escaping (TrackingSessionResponse?, CallResult) -> Void) throws -> TrackingServiceCreateSessionCall

  /// Asynchronous. Unary.
  @discardableResult
  func trackData(_ request: TrackingRequest, metadata customMetadata: Metadata, completion: @escaping (TrackingResponse?, CallResult) -> Void) throws -> TrackingServiceTrackDataCall

}

public extension TrackingServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func getTrackingConfiguration(_ request: GetTrackingConfigurationRequest, completion: @escaping (GetTrackingConfigurationResponse?, CallResult) -> Void) throws -> TrackingServiceGetTrackingConfigurationCall {
    return try self.getTrackingConfiguration(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func createSession(_ request: TrackingSessionRequest, completion: @escaping (TrackingSessionResponse?, CallResult) -> Void) throws -> TrackingServiceCreateSessionCall {
    return try self.createSession(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func trackData(_ request: TrackingRequest, completion: @escaping (TrackingResponse?, CallResult) -> Void) throws -> TrackingServiceTrackDataCall {
    return try self.trackData(request, metadata: self.metadata, completion: completion)
  }

}

public final class TrackingServiceServiceClient: ServiceClientBase, TrackingServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func getTrackingConfiguration(_ request: GetTrackingConfigurationRequest, metadata customMetadata: Metadata, completion: @escaping (GetTrackingConfigurationResponse?, CallResult) -> Void) throws -> TrackingServiceGetTrackingConfigurationCall {
    return try TrackingServiceGetTrackingConfigurationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func createSession(_ request: TrackingSessionRequest, metadata customMetadata: Metadata, completion: @escaping (TrackingSessionResponse?, CallResult) -> Void) throws -> TrackingServiceCreateSessionCall {
    return try TrackingServiceCreateSessionCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func trackData(_ request: TrackingRequest, metadata customMetadata: Metadata, completion: @escaping (TrackingResponse?, CallResult) -> Void) throws -> TrackingServiceTrackDataCall {
    return try TrackingServiceTrackDataCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol TransactionServiceQueryTransactionsCall: ClientCallUnary {}

fileprivate final class TransactionServiceQueryTransactionsCallBase: ClientCallUnaryBase<QueryTransactionsRequest, QueryTransactionsResponse>, TransactionServiceQueryTransactionsCall {
  override class var method: String { return "/TransactionService/QueryTransactions" }
}

public protocol TransactionServiceUpdateTransactionCall: ClientCallUnary {}

fileprivate final class TransactionServiceUpdateTransactionCallBase: ClientCallUnaryBase<UpdateTransactionRequest, UpdateTransactionResponse>, TransactionServiceUpdateTransactionCall {
  override class var method: String { return "/TransactionService/UpdateTransaction" }
}

public protocol TransactionServiceGetTransactionCall: ClientCallUnary {}

fileprivate final class TransactionServiceGetTransactionCallBase: ClientCallUnaryBase<GetTransactionRequest, GetTransactionResponse>, TransactionServiceGetTransactionCall {
  override class var method: String { return "/TransactionService/GetTransaction" }
}

public protocol TransactionServiceCategorizeTransactionsCall: ClientCallUnary {}

fileprivate final class TransactionServiceCategorizeTransactionsCallBase: ClientCallUnaryBase<CategorizeTransactionsRequest, CategorizeTransactionsResponse>, TransactionServiceCategorizeTransactionsCall {
  override class var method: String { return "/TransactionService/CategorizeTransactions" }
}

public protocol TransactionServiceGetSimilarTransactionsCall: ClientCallUnary {}

fileprivate final class TransactionServiceGetSimilarTransactionsCallBase: ClientCallUnaryBase<GetSimilarTransactionsRequest, GetSimilarTransactionsResponse>, TransactionServiceGetSimilarTransactionsCall {
  override class var method: String { return "/TransactionService/GetSimilarTransactions" }
}

public protocol TransactionServiceSuggestTransactionsCall: ClientCallUnary {}

fileprivate final class TransactionServiceSuggestTransactionsCallBase: ClientCallUnaryBase<SuggestTransactionsRequest, SuggestTransactionsResponse>, TransactionServiceSuggestTransactionsCall {
  override class var method: String { return "/TransactionService/SuggestTransactions" }
}

public protocol TransactionServiceSuggestCounterpartsCall: ClientCallUnary {}

fileprivate final class TransactionServiceSuggestCounterpartsCallBase: ClientCallUnaryBase<SuggestCounterpartsRequest, SuggestCounterpartsResponse>, TransactionServiceSuggestCounterpartsCall {
  override class var method: String { return "/TransactionService/SuggestCounterparts" }
}

public protocol TransactionServiceCreatePartAndCounterpartCall: ClientCallUnary {}

fileprivate final class TransactionServiceCreatePartAndCounterpartCallBase: ClientCallUnaryBase<CreatePartAndCounterpartRequest, CreatePartAndCounterpartResponse>, TransactionServiceCreatePartAndCounterpartCall {
  override class var method: String { return "/TransactionService/CreatePartAndCounterpart" }
}

public protocol TransactionServiceUpdatePartAndCounterpartCall: ClientCallUnary {}

fileprivate final class TransactionServiceUpdatePartAndCounterpartCallBase: ClientCallUnaryBase<UpdatePartAndCounterpartRequest, UpdatePartAndCounterpartResponse>, TransactionServiceUpdatePartAndCounterpartCall {
  override class var method: String { return "/TransactionService/UpdatePartAndCounterpart" }
}

public protocol TransactionServiceDeletePartAndCounterpartCall: ClientCallUnary {}

fileprivate final class TransactionServiceDeletePartAndCounterpartCallBase: ClientCallUnaryBase<DeletePartAndCounterpartRequest, DeletePartAndCounterpartResponse>, TransactionServiceDeletePartAndCounterpartCall {
  override class var method: String { return "/TransactionService/DeletePartAndCounterpart" }
}


/// Instantiate TransactionServiceServiceClient, then call methods of this protocol to make API calls.
public protocol TransactionServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func queryTransactions(_ request: QueryTransactionsRequest, metadata customMetadata: Metadata, completion: @escaping (QueryTransactionsResponse?, CallResult) -> Void) throws -> TransactionServiceQueryTransactionsCall

  /// Asynchronous. Unary.
  @discardableResult
  func updateTransaction(_ request: UpdateTransactionRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateTransactionResponse?, CallResult) -> Void) throws -> TransactionServiceUpdateTransactionCall

  /// Asynchronous. Unary.
  @discardableResult
  func getTransaction(_ request: GetTransactionRequest, metadata customMetadata: Metadata, completion: @escaping (GetTransactionResponse?, CallResult) -> Void) throws -> TransactionServiceGetTransactionCall

  /// Asynchronous. Unary.
  @discardableResult
  func categorizeTransactions(_ request: CategorizeTransactionsRequest, metadata customMetadata: Metadata, completion: @escaping (CategorizeTransactionsResponse?, CallResult) -> Void) throws -> TransactionServiceCategorizeTransactionsCall

  /// Asynchronous. Unary.
  @discardableResult
  func getSimilarTransactions(_ request: GetSimilarTransactionsRequest, metadata customMetadata: Metadata, completion: @escaping (GetSimilarTransactionsResponse?, CallResult) -> Void) throws -> TransactionServiceGetSimilarTransactionsCall

  /// Asynchronous. Unary.
  @discardableResult
  func suggestTransactions(_ request: SuggestTransactionsRequest, metadata customMetadata: Metadata, completion: @escaping (SuggestTransactionsResponse?, CallResult) -> Void) throws -> TransactionServiceSuggestTransactionsCall

  /// Asynchronous. Unary.
  @discardableResult
  func suggestCounterparts(_ request: SuggestCounterpartsRequest, metadata customMetadata: Metadata, completion: @escaping (SuggestCounterpartsResponse?, CallResult) -> Void) throws -> TransactionServiceSuggestCounterpartsCall

  /// Asynchronous. Unary.
  @discardableResult
  func createPartAndCounterpart(_ request: CreatePartAndCounterpartRequest, metadata customMetadata: Metadata, completion: @escaping (CreatePartAndCounterpartResponse?, CallResult) -> Void) throws -> TransactionServiceCreatePartAndCounterpartCall

  /// Asynchronous. Unary.
  @discardableResult
  func updatePartAndCounterpart(_ request: UpdatePartAndCounterpartRequest, metadata customMetadata: Metadata, completion: @escaping (UpdatePartAndCounterpartResponse?, CallResult) -> Void) throws -> TransactionServiceUpdatePartAndCounterpartCall

  /// Asynchronous. Unary.
  @discardableResult
  func deletePartAndCounterpart(_ request: DeletePartAndCounterpartRequest, metadata customMetadata: Metadata, completion: @escaping (DeletePartAndCounterpartResponse?, CallResult) -> Void) throws -> TransactionServiceDeletePartAndCounterpartCall

}

public extension TransactionServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func queryTransactions(_ request: QueryTransactionsRequest, completion: @escaping (QueryTransactionsResponse?, CallResult) -> Void) throws -> TransactionServiceQueryTransactionsCall {
    return try self.queryTransactions(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func updateTransaction(_ request: UpdateTransactionRequest, completion: @escaping (UpdateTransactionResponse?, CallResult) -> Void) throws -> TransactionServiceUpdateTransactionCall {
    return try self.updateTransaction(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getTransaction(_ request: GetTransactionRequest, completion: @escaping (GetTransactionResponse?, CallResult) -> Void) throws -> TransactionServiceGetTransactionCall {
    return try self.getTransaction(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func categorizeTransactions(_ request: CategorizeTransactionsRequest, completion: @escaping (CategorizeTransactionsResponse?, CallResult) -> Void) throws -> TransactionServiceCategorizeTransactionsCall {
    return try self.categorizeTransactions(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getSimilarTransactions(_ request: GetSimilarTransactionsRequest, completion: @escaping (GetSimilarTransactionsResponse?, CallResult) -> Void) throws -> TransactionServiceGetSimilarTransactionsCall {
    return try self.getSimilarTransactions(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func suggestTransactions(_ request: SuggestTransactionsRequest, completion: @escaping (SuggestTransactionsResponse?, CallResult) -> Void) throws -> TransactionServiceSuggestTransactionsCall {
    return try self.suggestTransactions(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func suggestCounterparts(_ request: SuggestCounterpartsRequest, completion: @escaping (SuggestCounterpartsResponse?, CallResult) -> Void) throws -> TransactionServiceSuggestCounterpartsCall {
    return try self.suggestCounterparts(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func createPartAndCounterpart(_ request: CreatePartAndCounterpartRequest, completion: @escaping (CreatePartAndCounterpartResponse?, CallResult) -> Void) throws -> TransactionServiceCreatePartAndCounterpartCall {
    return try self.createPartAndCounterpart(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func updatePartAndCounterpart(_ request: UpdatePartAndCounterpartRequest, completion: @escaping (UpdatePartAndCounterpartResponse?, CallResult) -> Void) throws -> TransactionServiceUpdatePartAndCounterpartCall {
    return try self.updatePartAndCounterpart(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func deletePartAndCounterpart(_ request: DeletePartAndCounterpartRequest, completion: @escaping (DeletePartAndCounterpartResponse?, CallResult) -> Void) throws -> TransactionServiceDeletePartAndCounterpartCall {
    return try self.deletePartAndCounterpart(request, metadata: self.metadata, completion: completion)
  }

}

public final class TransactionServiceServiceClient: ServiceClientBase, TransactionServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func queryTransactions(_ request: QueryTransactionsRequest, metadata customMetadata: Metadata, completion: @escaping (QueryTransactionsResponse?, CallResult) -> Void) throws -> TransactionServiceQueryTransactionsCall {
    return try TransactionServiceQueryTransactionsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func updateTransaction(_ request: UpdateTransactionRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateTransactionResponse?, CallResult) -> Void) throws -> TransactionServiceUpdateTransactionCall {
    return try TransactionServiceUpdateTransactionCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getTransaction(_ request: GetTransactionRequest, metadata customMetadata: Metadata, completion: @escaping (GetTransactionResponse?, CallResult) -> Void) throws -> TransactionServiceGetTransactionCall {
    return try TransactionServiceGetTransactionCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func categorizeTransactions(_ request: CategorizeTransactionsRequest, metadata customMetadata: Metadata, completion: @escaping (CategorizeTransactionsResponse?, CallResult) -> Void) throws -> TransactionServiceCategorizeTransactionsCall {
    return try TransactionServiceCategorizeTransactionsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getSimilarTransactions(_ request: GetSimilarTransactionsRequest, metadata customMetadata: Metadata, completion: @escaping (GetSimilarTransactionsResponse?, CallResult) -> Void) throws -> TransactionServiceGetSimilarTransactionsCall {
    return try TransactionServiceGetSimilarTransactionsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func suggestTransactions(_ request: SuggestTransactionsRequest, metadata customMetadata: Metadata, completion: @escaping (SuggestTransactionsResponse?, CallResult) -> Void) throws -> TransactionServiceSuggestTransactionsCall {
    return try TransactionServiceSuggestTransactionsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func suggestCounterparts(_ request: SuggestCounterpartsRequest, metadata customMetadata: Metadata, completion: @escaping (SuggestCounterpartsResponse?, CallResult) -> Void) throws -> TransactionServiceSuggestCounterpartsCall {
    return try TransactionServiceSuggestCounterpartsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func createPartAndCounterpart(_ request: CreatePartAndCounterpartRequest, metadata customMetadata: Metadata, completion: @escaping (CreatePartAndCounterpartResponse?, CallResult) -> Void) throws -> TransactionServiceCreatePartAndCounterpartCall {
    return try TransactionServiceCreatePartAndCounterpartCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func updatePartAndCounterpart(_ request: UpdatePartAndCounterpartRequest, metadata customMetadata: Metadata, completion: @escaping (UpdatePartAndCounterpartResponse?, CallResult) -> Void) throws -> TransactionServiceUpdatePartAndCounterpartCall {
    return try TransactionServiceUpdatePartAndCounterpartCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func deletePartAndCounterpart(_ request: DeletePartAndCounterpartRequest, metadata customMetadata: Metadata, completion: @escaping (DeletePartAndCounterpartResponse?, CallResult) -> Void) throws -> TransactionServiceDeletePartAndCounterpartCall {
    return try TransactionServiceDeletePartAndCounterpartCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol TransferServiceListTransfersCall: ClientCallUnary {}

fileprivate final class TransferServiceListTransfersCallBase: ClientCallUnaryBase<TransferListRequest, TransferListResponse>, TransferServiceListTransfersCall {
  override class var method: String { return "/TransferService/ListTransfers" }
}

public protocol TransferServiceGetTransferCall: ClientCallUnary {}

fileprivate final class TransferServiceGetTransferCallBase: ClientCallUnaryBase<TransferGetRequest, TransferGetResponse>, TransferServiceGetTransferCall {
  override class var method: String { return "/TransferService/GetTransfer" }
}

public protocol TransferServiceCreateTransferCall: ClientCallUnary {}

fileprivate final class TransferServiceCreateTransferCallBase: ClientCallUnaryBase<CreateTransferRequest, CreateTransferResponse>, TransferServiceCreateTransferCall {
  override class var method: String { return "/TransferService/CreateTransfer" }
}

public protocol TransferServiceUpdateTransferCall: ClientCallUnary {}

fileprivate final class TransferServiceUpdateTransferCallBase: ClientCallUnaryBase<UpdateTransferRequest, UpdateTransferResponse>, TransferServiceUpdateTransferCall {
  override class var method: String { return "/TransferService/UpdateTransfer" }
}

public protocol TransferServiceLookupGiroCall: ClientCallUnary {}

fileprivate final class TransferServiceLookupGiroCallBase: ClientCallUnaryBase<GiroLookupRequest, GiroLookupResponse>, TransferServiceLookupGiroCall {
  override class var method: String { return "/TransferService/LookupGiro" }
}

public protocol TransferServiceLookupClearingCall: ClientCallUnary {}

fileprivate final class TransferServiceLookupClearingCallBase: ClientCallUnaryBase<ClearingLookupRequest, ClearingLookupResponse>, TransferServiceLookupClearingCall {
  override class var method: String { return "/TransferService/LookupClearing" }
}

public protocol TransferServiceLookupSortCodeCall: ClientCallUnary {}

fileprivate final class TransferServiceLookupSortCodeCallBase: ClientCallUnaryBase<SortCodeLookupRequest, SortCodeLookupResponse>, TransferServiceLookupSortCodeCall {
  override class var method: String { return "/TransferService/LookupSortCode" }
}

public protocol TransferServiceCreateTransferDestinationCall: ClientCallUnary {}

fileprivate final class TransferServiceCreateTransferDestinationCallBase: ClientCallUnaryBase<CreateTransferDestinationRequest, CreateTransferDestinationResponse>, TransferServiceCreateTransferDestinationCall {
  override class var method: String { return "/TransferService/CreateTransferDestination" }
}

public protocol TransferServiceGetAccountsForTransferCall: ClientCallUnary {}

fileprivate final class TransferServiceGetAccountsForTransferCallBase: ClientCallUnaryBase<GetAccountsForTransferRequest, GetAccountsForTransferResponse>, TransferServiceGetAccountsForTransferCall {
  override class var method: String { return "/TransferService/GetAccountsForTransfer" }
}

public protocol TransferServiceGetTransferDestinationsCall: ClientCallUnary {}

fileprivate final class TransferServiceGetTransferDestinationsCallBase: ClientCallUnaryBase<GetTransferDestinationsRequest, GetTransferDestinationsResponse>, TransferServiceGetTransferDestinationsCall {
  override class var method: String { return "/TransferService/GetTransferDestinations" }
}


/// Instantiate TransferServiceServiceClient, then call methods of this protocol to make API calls.
public protocol TransferServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func listTransfers(_ request: TransferListRequest, metadata customMetadata: Metadata, completion: @escaping (TransferListResponse?, CallResult) -> Void) throws -> TransferServiceListTransfersCall

  /// Asynchronous. Unary.
  @discardableResult
  func getTransfer(_ request: TransferGetRequest, metadata customMetadata: Metadata, completion: @escaping (TransferGetResponse?, CallResult) -> Void) throws -> TransferServiceGetTransferCall

  /// Asynchronous. Unary.
  @discardableResult
  func createTransfer(_ request: CreateTransferRequest, metadata customMetadata: Metadata, completion: @escaping (CreateTransferResponse?, CallResult) -> Void) throws -> TransferServiceCreateTransferCall

  /// Asynchronous. Unary.
  @discardableResult
  func updateTransfer(_ request: UpdateTransferRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateTransferResponse?, CallResult) -> Void) throws -> TransferServiceUpdateTransferCall

  /// Asynchronous. Unary.
  @discardableResult
  func lookupGiro(_ request: GiroLookupRequest, metadata customMetadata: Metadata, completion: @escaping (GiroLookupResponse?, CallResult) -> Void) throws -> TransferServiceLookupGiroCall

  /// Asynchronous. Unary.
  @discardableResult
  func lookupClearing(_ request: ClearingLookupRequest, metadata customMetadata: Metadata, completion: @escaping (ClearingLookupResponse?, CallResult) -> Void) throws -> TransferServiceLookupClearingCall

  /// Asynchronous. Unary.
  @discardableResult
  func lookupSortCode(_ request: SortCodeLookupRequest, metadata customMetadata: Metadata, completion: @escaping (SortCodeLookupResponse?, CallResult) -> Void) throws -> TransferServiceLookupSortCodeCall

  /// Asynchronous. Unary.
  @discardableResult
  func createTransferDestination(_ request: CreateTransferDestinationRequest, metadata customMetadata: Metadata, completion: @escaping (CreateTransferDestinationResponse?, CallResult) -> Void) throws -> TransferServiceCreateTransferDestinationCall

  /// Asynchronous. Unary.
  @discardableResult
  func getAccountsForTransfer(_ request: GetAccountsForTransferRequest, metadata customMetadata: Metadata, completion: @escaping (GetAccountsForTransferResponse?, CallResult) -> Void) throws -> TransferServiceGetAccountsForTransferCall

  /// Asynchronous. Unary.
  @discardableResult
  func getTransferDestinations(_ request: GetTransferDestinationsRequest, metadata customMetadata: Metadata, completion: @escaping (GetTransferDestinationsResponse?, CallResult) -> Void) throws -> TransferServiceGetTransferDestinationsCall

}

public extension TransferServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func listTransfers(_ request: TransferListRequest, completion: @escaping (TransferListResponse?, CallResult) -> Void) throws -> TransferServiceListTransfersCall {
    return try self.listTransfers(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getTransfer(_ request: TransferGetRequest, completion: @escaping (TransferGetResponse?, CallResult) -> Void) throws -> TransferServiceGetTransferCall {
    return try self.getTransfer(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func createTransfer(_ request: CreateTransferRequest, completion: @escaping (CreateTransferResponse?, CallResult) -> Void) throws -> TransferServiceCreateTransferCall {
    return try self.createTransfer(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func updateTransfer(_ request: UpdateTransferRequest, completion: @escaping (UpdateTransferResponse?, CallResult) -> Void) throws -> TransferServiceUpdateTransferCall {
    return try self.updateTransfer(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func lookupGiro(_ request: GiroLookupRequest, completion: @escaping (GiroLookupResponse?, CallResult) -> Void) throws -> TransferServiceLookupGiroCall {
    return try self.lookupGiro(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func lookupClearing(_ request: ClearingLookupRequest, completion: @escaping (ClearingLookupResponse?, CallResult) -> Void) throws -> TransferServiceLookupClearingCall {
    return try self.lookupClearing(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func lookupSortCode(_ request: SortCodeLookupRequest, completion: @escaping (SortCodeLookupResponse?, CallResult) -> Void) throws -> TransferServiceLookupSortCodeCall {
    return try self.lookupSortCode(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func createTransferDestination(_ request: CreateTransferDestinationRequest, completion: @escaping (CreateTransferDestinationResponse?, CallResult) -> Void) throws -> TransferServiceCreateTransferDestinationCall {
    return try self.createTransferDestination(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getAccountsForTransfer(_ request: GetAccountsForTransferRequest, completion: @escaping (GetAccountsForTransferResponse?, CallResult) -> Void) throws -> TransferServiceGetAccountsForTransferCall {
    return try self.getAccountsForTransfer(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getTransferDestinations(_ request: GetTransferDestinationsRequest, completion: @escaping (GetTransferDestinationsResponse?, CallResult) -> Void) throws -> TransferServiceGetTransferDestinationsCall {
    return try self.getTransferDestinations(request, metadata: self.metadata, completion: completion)
  }

}

public final class TransferServiceServiceClient: ServiceClientBase, TransferServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func listTransfers(_ request: TransferListRequest, metadata customMetadata: Metadata, completion: @escaping (TransferListResponse?, CallResult) -> Void) throws -> TransferServiceListTransfersCall {
    return try TransferServiceListTransfersCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getTransfer(_ request: TransferGetRequest, metadata customMetadata: Metadata, completion: @escaping (TransferGetResponse?, CallResult) -> Void) throws -> TransferServiceGetTransferCall {
    return try TransferServiceGetTransferCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func createTransfer(_ request: CreateTransferRequest, metadata customMetadata: Metadata, completion: @escaping (CreateTransferResponse?, CallResult) -> Void) throws -> TransferServiceCreateTransferCall {
    return try TransferServiceCreateTransferCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func updateTransfer(_ request: UpdateTransferRequest, metadata customMetadata: Metadata, completion: @escaping (UpdateTransferResponse?, CallResult) -> Void) throws -> TransferServiceUpdateTransferCall {
    return try TransferServiceUpdateTransferCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func lookupGiro(_ request: GiroLookupRequest, metadata customMetadata: Metadata, completion: @escaping (GiroLookupResponse?, CallResult) -> Void) throws -> TransferServiceLookupGiroCall {
    return try TransferServiceLookupGiroCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func lookupClearing(_ request: ClearingLookupRequest, metadata customMetadata: Metadata, completion: @escaping (ClearingLookupResponse?, CallResult) -> Void) throws -> TransferServiceLookupClearingCall {
    return try TransferServiceLookupClearingCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func lookupSortCode(_ request: SortCodeLookupRequest, metadata customMetadata: Metadata, completion: @escaping (SortCodeLookupResponse?, CallResult) -> Void) throws -> TransferServiceLookupSortCodeCall {
    return try TransferServiceLookupSortCodeCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func createTransferDestination(_ request: CreateTransferDestinationRequest, metadata customMetadata: Metadata, completion: @escaping (CreateTransferDestinationResponse?, CallResult) -> Void) throws -> TransferServiceCreateTransferDestinationCall {
    return try TransferServiceCreateTransferDestinationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getAccountsForTransfer(_ request: GetAccountsForTransferRequest, metadata customMetadata: Metadata, completion: @escaping (GetAccountsForTransferResponse?, CallResult) -> Void) throws -> TransferServiceGetAccountsForTransferCall {
    return try TransferServiceGetAccountsForTransferCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getTransferDestinations(_ request: GetTransferDestinationsRequest, metadata customMetadata: Metadata, completion: @escaping (GetTransferDestinationsResponse?, CallResult) -> Void) throws -> TransferServiceGetTransferDestinationsCall {
    return try TransferServiceGetTransferDestinationsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol TransferKycServiceStoreKycCall: ClientCallUnary {}

fileprivate final class TransferKycServiceStoreKycCallBase: ClientCallUnaryBase<StoreTransferKycRequest, StoreTransferKycResponse>, TransferKycServiceStoreKycCall {
  override class var method: String { return "/TransferKycService/StoreKyc" }
}

public protocol TransferKycServiceGetKycCall: ClientCallUnary {}

fileprivate final class TransferKycServiceGetKycCallBase: ClientCallUnaryBase<GetTransferKycRequest, GetTransferKycResponse>, TransferKycServiceGetKycCall {
  override class var method: String { return "/TransferKycService/GetKyc" }
}

public protocol TransferKycServiceIsCompliantCall: ClientCallUnary {}

fileprivate final class TransferKycServiceIsCompliantCallBase: ClientCallUnaryBase<IsTransferKycCompliantRequest, IsTransferKycCompliantResponse>, TransferKycServiceIsCompliantCall {
  override class var method: String { return "/TransferKycService/IsCompliant" }
}


/// Instantiate TransferKycServiceServiceClient, then call methods of this protocol to make API calls.
public protocol TransferKycServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func storeKyc(_ request: StoreTransferKycRequest, metadata customMetadata: Metadata, completion: @escaping (StoreTransferKycResponse?, CallResult) -> Void) throws -> TransferKycServiceStoreKycCall

  /// Asynchronous. Unary.
  @discardableResult
  func getKyc(_ request: GetTransferKycRequest, metadata customMetadata: Metadata, completion: @escaping (GetTransferKycResponse?, CallResult) -> Void) throws -> TransferKycServiceGetKycCall

  /// Asynchronous. Unary.
  @discardableResult
  func isCompliant(_ request: IsTransferKycCompliantRequest, metadata customMetadata: Metadata, completion: @escaping (IsTransferKycCompliantResponse?, CallResult) -> Void) throws -> TransferKycServiceIsCompliantCall

}

public extension TransferKycServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func storeKyc(_ request: StoreTransferKycRequest, completion: @escaping (StoreTransferKycResponse?, CallResult) -> Void) throws -> TransferKycServiceStoreKycCall {
    return try self.storeKyc(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getKyc(_ request: GetTransferKycRequest, completion: @escaping (GetTransferKycResponse?, CallResult) -> Void) throws -> TransferKycServiceGetKycCall {
    return try self.getKyc(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func isCompliant(_ request: IsTransferKycCompliantRequest, completion: @escaping (IsTransferKycCompliantResponse?, CallResult) -> Void) throws -> TransferKycServiceIsCompliantCall {
    return try self.isCompliant(request, metadata: self.metadata, completion: completion)
  }

}

public final class TransferKycServiceServiceClient: ServiceClientBase, TransferKycServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func storeKyc(_ request: StoreTransferKycRequest, metadata customMetadata: Metadata, completion: @escaping (StoreTransferKycResponse?, CallResult) -> Void) throws -> TransferKycServiceStoreKycCall {
    return try TransferKycServiceStoreKycCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getKyc(_ request: GetTransferKycRequest, metadata customMetadata: Metadata, completion: @escaping (GetTransferKycResponse?, CallResult) -> Void) throws -> TransferKycServiceGetKycCall {
    return try TransferKycServiceGetKycCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func isCompliant(_ request: IsTransferKycCompliantRequest, metadata customMetadata: Metadata, completion: @escaping (IsTransferKycCompliantResponse?, CallResult) -> Void) throws -> TransferKycServiceIsCompliantCall {
    return try TransferKycServiceIsCompliantCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol UserServiceGetProfileCall: ClientCallUnary {}

fileprivate final class UserServiceGetProfileCallBase: ClientCallUnaryBase<GetProfileRequest, GetProfileResponse>, UserServiceGetProfileCall {
  override class var method: String { return "/UserService/GetProfile" }
}

public protocol UserServiceDeleteUserCall: ClientCallUnary {}

fileprivate final class UserServiceDeleteUserCallBase: ClientCallUnaryBase<DeleteUserRequest, DeleteUserResponse>, UserServiceDeleteUserCall {
  override class var method: String { return "/UserService/DeleteUser" }
}

public protocol UserServiceRateAppCall: ClientCallUnary {}

fileprivate final class UserServiceRateAppCallBase: ClientCallUnaryBase<RateAppRequest, RateAppResponse>, UserServiceRateAppCall {
  override class var method: String { return "/UserService/RateApp" }
}


/// Instantiate UserServiceServiceClient, then call methods of this protocol to make API calls.
public protocol UserServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func getProfile(_ request: GetProfileRequest, metadata customMetadata: Metadata, completion: @escaping (GetProfileResponse?, CallResult) -> Void) throws -> UserServiceGetProfileCall

  /// Asynchronous. Unary.
  @discardableResult
  func deleteUser(_ request: DeleteUserRequest, metadata customMetadata: Metadata, completion: @escaping (DeleteUserResponse?, CallResult) -> Void) throws -> UserServiceDeleteUserCall

  /// Asynchronous. Unary.
  @discardableResult
  func rateApp(_ request: RateAppRequest, metadata customMetadata: Metadata, completion: @escaping (RateAppResponse?, CallResult) -> Void) throws -> UserServiceRateAppCall

}

public extension UserServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func getProfile(_ request: GetProfileRequest, completion: @escaping (GetProfileResponse?, CallResult) -> Void) throws -> UserServiceGetProfileCall {
    return try self.getProfile(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func deleteUser(_ request: DeleteUserRequest, completion: @escaping (DeleteUserResponse?, CallResult) -> Void) throws -> UserServiceDeleteUserCall {
    return try self.deleteUser(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func rateApp(_ request: RateAppRequest, completion: @escaping (RateAppResponse?, CallResult) -> Void) throws -> UserServiceRateAppCall {
    return try self.rateApp(request, metadata: self.metadata, completion: completion)
  }

}

public final class UserServiceServiceClient: ServiceClientBase, UserServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func getProfile(_ request: GetProfileRequest, metadata customMetadata: Metadata, completion: @escaping (GetProfileResponse?, CallResult) -> Void) throws -> UserServiceGetProfileCall {
    return try UserServiceGetProfileCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func deleteUser(_ request: DeleteUserRequest, metadata customMetadata: Metadata, completion: @escaping (DeleteUserResponse?, CallResult) -> Void) throws -> UserServiceDeleteUserCall {
    return try UserServiceDeleteUserCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func rateApp(_ request: RateAppRequest, metadata customMetadata: Metadata, completion: @escaping (RateAppResponse?, CallResult) -> Void) throws -> UserServiceRateAppCall {
    return try UserServiceRateAppCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}
public protocol ChallengeResponseAuthenticationServiceListAuthenticationKeysCall: ClientCallUnary {}

fileprivate final class ChallengeResponseAuthenticationServiceListAuthenticationKeysCallBase: ClientCallUnaryBase<ListAuthenticationKeysRequest, ListAuthenticationKeysResponse>, ChallengeResponseAuthenticationServiceListAuthenticationKeysCall {
  override class var method: String { return "/ChallengeResponseAuthenticationService/ListAuthenticationKeys" }
}

public protocol ChallengeResponseAuthenticationServiceStoreAuthenticationKeyCall: ClientCallUnary {}

fileprivate final class ChallengeResponseAuthenticationServiceStoreAuthenticationKeyCallBase: ClientCallUnaryBase<StoreAuthenticationKeyRequest, StoreAuthenticationKeyResponse>, ChallengeResponseAuthenticationServiceStoreAuthenticationKeyCall {
  override class var method: String { return "/ChallengeResponseAuthenticationService/StoreAuthenticationKey" }
}

public protocol ChallengeResponseAuthenticationServiceDeleteAuthenticationKeyCall: ClientCallUnary {}

fileprivate final class ChallengeResponseAuthenticationServiceDeleteAuthenticationKeyCallBase: ClientCallUnaryBase<DeleteAuthenticationKeyRequest, DeleteAuthenticationKeyResponse>, ChallengeResponseAuthenticationServiceDeleteAuthenticationKeyCall {
  override class var method: String { return "/ChallengeResponseAuthenticationService/DeleteAuthenticationKey" }
}

public protocol ChallengeResponseAuthenticationServiceGetAuthenticationChallengeCall: ClientCallUnary {}

fileprivate final class ChallengeResponseAuthenticationServiceGetAuthenticationChallengeCallBase: ClientCallUnaryBase<GetAuthenticationChallengeRequest, GetAuthenticationChallengeResponse>, ChallengeResponseAuthenticationServiceGetAuthenticationChallengeCall {
  override class var method: String { return "/ChallengeResponseAuthenticationService/GetAuthenticationChallenge" }
}

public protocol ChallengeResponseAuthenticationServiceSignedChallengeAuthenticationCall: ClientCallUnary {}

fileprivate final class ChallengeResponseAuthenticationServiceSignedChallengeAuthenticationCallBase: ClientCallUnaryBase<SignedChallengeAuthenticationRequest, SignedChallengeAuthenticationResponse>, ChallengeResponseAuthenticationServiceSignedChallengeAuthenticationCall {
  override class var method: String { return "/ChallengeResponseAuthenticationService/SignedChallengeAuthentication" }
}


/// Instantiate ChallengeResponseAuthenticationServiceServiceClient, then call methods of this protocol to make API calls.
public protocol ChallengeResponseAuthenticationServiceService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func listAuthenticationKeys(_ request: ListAuthenticationKeysRequest, metadata customMetadata: Metadata, completion: @escaping (ListAuthenticationKeysResponse?, CallResult) -> Void) throws -> ChallengeResponseAuthenticationServiceListAuthenticationKeysCall

  /// Asynchronous. Unary.
  @discardableResult
  func storeAuthenticationKey(_ request: StoreAuthenticationKeyRequest, metadata customMetadata: Metadata, completion: @escaping (StoreAuthenticationKeyResponse?, CallResult) -> Void) throws -> ChallengeResponseAuthenticationServiceStoreAuthenticationKeyCall

  /// Asynchronous. Unary.
  @discardableResult
  func deleteAuthenticationKey(_ request: DeleteAuthenticationKeyRequest, metadata customMetadata: Metadata, completion: @escaping (DeleteAuthenticationKeyResponse?, CallResult) -> Void) throws -> ChallengeResponseAuthenticationServiceDeleteAuthenticationKeyCall

  /// Asynchronous. Unary.
  @discardableResult
  func getAuthenticationChallenge(_ request: GetAuthenticationChallengeRequest, metadata customMetadata: Metadata, completion: @escaping (GetAuthenticationChallengeResponse?, CallResult) -> Void) throws -> ChallengeResponseAuthenticationServiceGetAuthenticationChallengeCall

  /// Asynchronous. Unary.
  @discardableResult
  func signedChallengeAuthentication(_ request: SignedChallengeAuthenticationRequest, metadata customMetadata: Metadata, completion: @escaping (SignedChallengeAuthenticationResponse?, CallResult) -> Void) throws -> ChallengeResponseAuthenticationServiceSignedChallengeAuthenticationCall

}

public extension ChallengeResponseAuthenticationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  func listAuthenticationKeys(_ request: ListAuthenticationKeysRequest, completion: @escaping (ListAuthenticationKeysResponse?, CallResult) -> Void) throws -> ChallengeResponseAuthenticationServiceListAuthenticationKeysCall {
    return try self.listAuthenticationKeys(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func storeAuthenticationKey(_ request: StoreAuthenticationKeyRequest, completion: @escaping (StoreAuthenticationKeyResponse?, CallResult) -> Void) throws -> ChallengeResponseAuthenticationServiceStoreAuthenticationKeyCall {
    return try self.storeAuthenticationKey(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func deleteAuthenticationKey(_ request: DeleteAuthenticationKeyRequest, completion: @escaping (DeleteAuthenticationKeyResponse?, CallResult) -> Void) throws -> ChallengeResponseAuthenticationServiceDeleteAuthenticationKeyCall {
    return try self.deleteAuthenticationKey(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func getAuthenticationChallenge(_ request: GetAuthenticationChallengeRequest, completion: @escaping (GetAuthenticationChallengeResponse?, CallResult) -> Void) throws -> ChallengeResponseAuthenticationServiceGetAuthenticationChallengeCall {
    return try self.getAuthenticationChallenge(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func signedChallengeAuthentication(_ request: SignedChallengeAuthenticationRequest, completion: @escaping (SignedChallengeAuthenticationResponse?, CallResult) -> Void) throws -> ChallengeResponseAuthenticationServiceSignedChallengeAuthenticationCall {
    return try self.signedChallengeAuthentication(request, metadata: self.metadata, completion: completion)
  }

}

public final class ChallengeResponseAuthenticationServiceServiceClient: ServiceClientBase, ChallengeResponseAuthenticationServiceService {
  /// Asynchronous. Unary.
  @discardableResult
  public func listAuthenticationKeys(_ request: ListAuthenticationKeysRequest, metadata customMetadata: Metadata, completion: @escaping (ListAuthenticationKeysResponse?, CallResult) -> Void) throws -> ChallengeResponseAuthenticationServiceListAuthenticationKeysCall {
    return try ChallengeResponseAuthenticationServiceListAuthenticationKeysCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func storeAuthenticationKey(_ request: StoreAuthenticationKeyRequest, metadata customMetadata: Metadata, completion: @escaping (StoreAuthenticationKeyResponse?, CallResult) -> Void) throws -> ChallengeResponseAuthenticationServiceStoreAuthenticationKeyCall {
    return try ChallengeResponseAuthenticationServiceStoreAuthenticationKeyCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func deleteAuthenticationKey(_ request: DeleteAuthenticationKeyRequest, metadata customMetadata: Metadata, completion: @escaping (DeleteAuthenticationKeyResponse?, CallResult) -> Void) throws -> ChallengeResponseAuthenticationServiceDeleteAuthenticationKeyCall {
    return try ChallengeResponseAuthenticationServiceDeleteAuthenticationKeyCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func getAuthenticationChallenge(_ request: GetAuthenticationChallengeRequest, metadata customMetadata: Metadata, completion: @escaping (GetAuthenticationChallengeResponse?, CallResult) -> Void) throws -> ChallengeResponseAuthenticationServiceGetAuthenticationChallengeCall {
    return try ChallengeResponseAuthenticationServiceGetAuthenticationChallengeCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  public func signedChallengeAuthentication(_ request: SignedChallengeAuthenticationRequest, metadata customMetadata: Metadata, completion: @escaping (SignedChallengeAuthenticationResponse?, CallResult) -> Void) throws -> ChallengeResponseAuthenticationServiceSignedChallengeAuthenticationCall {
    return try ChallengeResponseAuthenticationServiceSignedChallengeAuthenticationCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

